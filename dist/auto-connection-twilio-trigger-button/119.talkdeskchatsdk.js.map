{"version":3,"file":"119.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/event-emitter/register-handler.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/serialize/bel-serializer.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/ajax/aggregate/deny-list.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/ajax/aggregate/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { handleEE, globalEE } from './handle'\n\n// export default defaultRegister\nexport { globalRegister as global }\nexport { defaultRegister as registerHandler }\n\ndefaultRegister.on = registerWithSpecificEmitter\n\nvar handlers = defaultRegister.handlers = {}\nvar globalHandlers = globalRegister.handlers = {}\n\nexport function defaultRegister (type, handler, group, ee) {\n  registerWithSpecificEmitter(ee || handleEE, handlers, type, handler, group)\n}\n\nfunction globalRegister (type, handler, group) {\n  registerWithSpecificEmitter(globalEE, globalHandlers, type, handler, group)\n}\n\nfunction registerWithSpecificEmitter (ee, handlers, type, handler, group) {\n  if (!group) group = 'feature'\n  if (!ee) ee = handleEE\n\n  if (ee.isBuffering(type)) {\n    var groupHandlers = handlers[group] = handlers[group] || {}\n    var list = groupHandlers[type] = groupHandlers[type] || []\n    list.push([ee, handler])\n  } else {\n    ee.on(type, handler)\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mapOwn } from '../util/map-own'\nimport { stringify } from '../util/stringify'\nimport { Obfuscator } from '../util/obfuscate'\n\nvar hasOwnProp = Object.prototype.hasOwnProperty\nvar MAX_ATTRIBUTES = 64\n\n// export default {\n//   nullable,\n//   numeric,\n//   getAddStringContext,\n//   addCustomAttributes\n// }\n\nexport function nullable (val, fn, comma) {\n  return val || val === 0 || val === ''\n    ? fn(val) + (comma ? ',' : '')\n    : '!'\n}\n\nexport function numeric (n, noDefault) {\n  if (noDefault) {\n    return Math.floor(n).toString(36)\n  }\n  return (n === undefined || n === 0) ? '' : Math.floor(n).toString(36)\n}\n\nexport function getAddStringContext (agentIdentifier) {\n  // eslint-disable-next-line\n  var stringTable = Object.hasOwnProperty('create') ? Object.create(null) : {}\n  var stringTableIdx = 0\n\n  return addString\n\n  function addString(str) {\n    if (typeof str === 'undefined' || str === '') return ''\n    var obfuscator = new Obfuscator({agentIdentifier: agentIdentifier})\n    str = String(str)\n    if (obfuscator.shouldObfuscate()) str = obfuscator.obfuscateString(str)\n    if (hasOwnProp.call(stringTable, str)) {\n      return numeric(stringTable[str], true)\n    } else {\n      stringTable[str] = stringTableIdx++\n      return quoteString(str)\n    }\n  }\n}\n\nexport function addCustomAttributes (attrs, addString) {\n  var attrParts = []\n\n  mapOwn(attrs, function (key, val) {\n    if (attrParts.length >= MAX_ATTRIBUTES) return\n    var type = 5\n    var serializedValue\n    // add key to string table first\n    key = addString(key)\n\n    switch (typeof val) {\n      case 'object':\n        if (val) {\n          // serialize objects to strings\n          serializedValue = addString(stringify(val))\n        } else {\n          // null attribute type\n          type = 9\n        }\n        break\n      case 'number':\n        type = 6\n        // make sure numbers contain a `.` so they are parsed as doubles\n        serializedValue = val % 1 ? val : val + '.'\n        break\n      case 'boolean':\n        type = val ? 7 : 8\n        break\n      case 'undefined':\n        // we treat undefined as a null attribute (since dirac does not have a concept of undefined)\n        type = 9\n        break\n      default:\n        serializedValue = addString(val)\n    }\n\n    attrParts.push([type, key + (serializedValue ? ',' + serializedValue : '')])\n  })\n\n  return attrParts\n}\n\nvar escapable = /([,\\\\;])/g\n\nfunction quoteString (str) {\n  return \"'\" + str.replace(escapable, '\\\\$1')\n}\n","\n// export default {\n//   shouldCollectEvent: shouldCollectEvent,\n//   setDenyList: setDenyList\n// }\n\nvar denyList = []\n\nexport function shouldCollectEvent(params) {\n  if (denyList.length === 0) {\n    return true\n  }\n\n  for (var i = 0; i < denyList.length; i++) {\n    var parsed = denyList[i]\n    if (parsed.hostname === '*') {\n      return false\n    }\n    if (domainMatchesPattern(parsed.hostname, params.hostname) &&\n        comparePath(parsed.pathname, params.pathname)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function setDenyList(denyListConfig) {\n  denyList = []\n  if (!denyListConfig || !denyListConfig.length) {\n    return\n  }\n  for (var i = 0; i < denyListConfig.length; i++) {\n    var url = denyListConfig[i]\n    if (url.indexOf('http://') === 0) {\n      url = url.substring(7)\n    } else if (url.indexOf('https://') === 0) {\n      url = url.substring(8)\n    }\n    var firstSlash = url.indexOf('/')\n    if (firstSlash > 0) {\n      denyList.push({\n        hostname: url.substring(0, firstSlash),\n        pathname: url.substring(firstSlash)\n      })\n    } else {\n      denyList.push({\n        hostname: url,\n        pathname: ''\n      })\n    }\n  }\n}\n\n// returns true if the right side of the domain matches the pattern\nfunction domainMatchesPattern(pattern, domain) {\n  if (pattern.length > domain.length) {\n    return false\n  }\n\n  if (domain.indexOf(pattern) === (domain.length - pattern.length)) {\n    return true\n  }\n  return false\n}\n\nfunction comparePath(pattern, path) {\n  if (pattern.indexOf('/') === 0) {\n    pattern = pattern.substring(1)\n  }\n\n  if (path.indexOf('/') === 0) {\n    path = path.substring(1)\n  }\n\n  // no path in pattern means match all paths\n  if (pattern === '') {\n    return true\n  }\n\n  if (pattern === path) {\n    return true\n  }\n\n  return false\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { registerHandler as register } from '../../../common/event-emitter/register-handler'\nimport { stringify } from '../../../common/util/stringify'\nimport { nullable, numeric, getAddStringContext, addCustomAttributes } from '../../../common/serialize/bel-serializer'\nimport { handle } from '../../../common/event-emitter/handle'\nimport { getConfigurationValue, getInfo } from '../../../common/config/config'\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler'\nimport { subscribeToUnload } from '../../../common/unload/unload'\nimport { recordSupportability } from '../../../common/metrics/metrics'\nimport { setDenyList, shouldCollectEvent } from './deny-list'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nexport class Aggregate extends FeatureBase {\n  constructor(agentIdentifier, aggregator) {\n    super(agentIdentifier, aggregator)\n    this.ajaxEvents = []\n    this.spaAjaxEvents = {}\n    this.sentAjaxEvents = []\n    this.scheduler\n\n    this.harvestTimeSeconds = getConfigurationValue(this.agentIdentifier, 'ajax.harvestTimeSeconds') || 10\n    this.MAX_PAYLOAD_SIZE = getConfigurationValue(this.agentIdentifier, 'ajax.maxPayloadSize') || 1000000\n\n    this.ee.on('interactionSaved', function (interaction) {\n      if (!this.spaAjaxEvents[interaction.id]) return\n      // remove from the spaAjaxEvents buffer, and let spa harvest it\n      delete this.spaAjaxEvents[interaction.id]\n    })\n\n    this.ee.on('interactionDiscarded', function (interaction) {\n      if (!this.spaAjaxEvents[interaction.id] || !this.allAjaxIsEnabled()) return\n\n      this.spaAjaxEvents[interaction.id].forEach(function (item) {\n        // move it from the spaAjaxEvents buffer to the ajaxEvents buffer for harvesting here\n        this.ajaxEvents.push(item)\n      })\n      delete this.spaAjaxEvents[interaction.id]\n    })\n\n    if (this.allAjaxIsEnabled()) setDenyList(getConfigurationValue(this.agentIdentifier, 'ajax.deny_list'))\n\n    register('xhr', (...args) => this.storeXhr(...args), undefined, this.ee)\n\n    if (this.allAjaxIsEnabled()) {\n      this.scheduler = new HarvestScheduler('events', {\n        onFinished: (...args) => this.onEventsHarvestFinished(...args),\n        getPayload: (...args) => this.prepareHarvest(...args)\n      })\n      this.scheduler.harvest.on('jserrors', function () {\n        return { body: this.aggregator.take(['xhr']) }\n      })\n      this.scheduler.startTimer(this.harvestTimeSeconds)\n\n      subscribeToUnload((...args) => this.finalHarvest(...args))\n    }\n  }\n\n  // export { shouldCollectEvent }\n  // export { setDenyList }\n\n  getStoredEvents() {\n    return {\n      ajaxEvents: this.ajaxEvents,\n      spaAjaxEvents: this.spaAjaxEvents\n    }\n  }\n\n  storeXhr(params, metrics, startTime, endTime, type) {\n    if (params.hostname === 'localhost') {\n      return\n    }\n\n    metrics.time = startTime\n\n    // send to session traces\n    var hash\n    if (params.cat) {\n      hash = stringify([params.status, params.cat])\n    } else {\n      hash = stringify([params.status, params.host, params.pathname])\n    }\n\n    handle('bstXhrAgg', ['xhr', hash, params, metrics], undefined, undefined, this.ee)\n\n    // store as metric\n    this.aggregator.store('xhr', hash, params, metrics)\n\n    if (!this.allAjaxIsEnabled()) {\n      return\n    }\n\n    if (!shouldCollectEvent(params)) {\n      if (params.hostname === getInfo(this.agentIdentifier).errorBeacon) {\n        recordSupportability('Ajax/Events/Excluded/Agent')\n      } else {\n        recordSupportability('Ajax/Events/Excluded/App')\n      }\n      return\n    }\n\n    var xhrContext = this\n\n    var event = {\n      method: params.method,\n      status: params.status,\n      domain: params.host,\n      path: params.pathname,\n      requestSize: metrics.txSize,\n      responseSize: metrics.rxSize,\n      type: type,\n      startTime: startTime,\n      endTime: endTime,\n      callbackDuration: metrics.cbTime\n    }\n\n    if (xhrContext.dt) {\n      event.spanId = xhrContext.dt.spanId\n      event.traceId = xhrContext.dt.traceId\n      event.spanTimestamp = xhrContext.dt.timestamp\n    }\n\n    // if the ajax happened inside an interaction, hold it until the interaction finishes\n    if (this.spaNode) {\n      var interactionId = this.spaNode.interaction.id\n      this.spaAjaxEvents[interactionId] = this.spaAjaxEvents[interactionId] || []\n      this.spaAjaxEvents[interactionId].push(event)\n    } else {\n      this.ajaxEvents.push(event)\n    }\n  }\n\n  prepareHarvest(options) {\n    options = options || {}\n\n    if (this.ajaxEvents.length === 0) {\n      return null\n    }\n\n    var payload = this.getPayload(this.ajaxEvents, options.maxPayloadSize || this.MAX_PAYLOAD_SIZE)\n\n    var payloadObjs = []\n    for (var i = 0; i < payload.length; i++) {\n      payloadObjs.push({ body: { e: payload[i] } })\n    }\n\n    if (options.retry) {\n      this.sentAjaxEvents = this.ajaxEvents.slice()\n    }\n\n    this.ajaxEvents = []\n\n    return payloadObjs\n  }\n\n  getPayload(events, maxPayloadSize, chunks) {\n    chunks = chunks || 1\n    var payload = []\n    var chunkSize = events.length / chunks\n    var eventChunks = this.splitChunks(events, chunkSize)\n    var tooBig = false\n    for (var i = 0; i < eventChunks.length; i++) {\n      var currentChunk = eventChunks[i]\n      if (currentChunk.tooBig(maxPayloadSize)) {\n        if (currentChunk.events.length !== 1) {\n          /* if it is too big BUT it isnt length 1, we can split it down again,\n           else we just want to NOT push it into payload\n           because if it's length 1 and still too big for the maxPayloadSize\n           it cant get any smaller and we dont want to recurse forever */\n          tooBig = true\n          break\n        }\n      } else {\n        payload.push(currentChunk.payload)\n      }\n    }\n    // check if the current payload string is too big, if so then run getPayload again with more buckets\n    return tooBig ? this.getPayload(events, maxPayloadSize, ++chunks) : payload\n  }\n\n  onEventsHarvestFinished(result) {\n    if (result.retry && this.sentAjaxEvents.length > 0 && this.allAjaxIsEnabled()) {\n      this.ajaxEvents = this.ajaxEvents.concat(this.sentAjaxEvents)\n      this.sentAjaxEvents = []\n    }\n  }\n\n  splitChunks(arr, chunkSize) {\n    chunkSize = chunkSize || arr.length\n    var chunks = []\n    for (var i = 0, len = arr.length; i < len; i += chunkSize) {\n      chunks.push(new this.Chunk(arr.slice(i, i + chunkSize)))\n    }\n    return chunks\n  }\n\n  Chunk(events) {\n    this.addString = getAddStringContext() // pass agentIdentifier here\n    this.events = events\n    this.payload = 'bel.7;'\n\n    for (var i = 0; i < this.events.length; i++) {\n      var event = this.events[i]\n      var fields = [\n        numeric(event.startTime),\n        numeric(event.endTime - event.startTime),\n        numeric(0), // callbackEnd\n        numeric(0), // no callbackDuration for non-SPA events\n        this.addString(event.method),\n        numeric(event.status),\n        this.addString(event.domain),\n        this.addString(event.path),\n        numeric(event.requestSize),\n        numeric(event.responseSize),\n        event.type === 'fetch' ? 1 : '',\n        this.addString(0), // nodeId\n        nullable(event.spanId, this.addString, true) + // guid\n        nullable(event.traceId, this.addString, true) + // traceId\n        nullable(event.spanTimestamp, numeric, false) // timestamp\n      ]\n\n      var insert = '2,'\n\n      // add custom attributes\n      var attrParts = addCustomAttributes(getInfo(this.agentIdentifier).jsAttributes || {}, this.addString)\n      fields.unshift(numeric(attrParts.length))\n\n      insert += fields.join(',')\n\n      if (attrParts && attrParts.length > 0) {\n        insert += ';' + attrParts.join(';')\n      }\n\n      if ((i + 1) < this.events.length) insert += ';'\n\n      this.payload += insert\n    }\n\n    this.tooBig = function (maxPayloadSize) {\n      maxPayloadSize = maxPayloadSize || this.MAX_PAYLOAD_SIZE\n      return this.payload.length * 2 > maxPayloadSize\n    }\n  }\n\n  allAjaxIsEnabled() {\n    var enabled = getConfigurationValue(this.agentIdentifier, 'ajax.enabled')\n    if (enabled === false) {\n      return false\n    }\n    return true\n  }\n}\n"],"names":["defaultRegister","on","registerWithSpecificEmitter","handlers","globalHandlers","globalRegister","type","handler","group","ee","isBuffering","groupHandlers","push","hasOwnProp","Object","prototype","hasOwnProperty","MAX_ATTRIBUTES","nullable","val","fn","comma","numeric","n","noDefault","Math","floor","toString","undefined","getAddStringContext","agentIdentifier","stringTable","create","stringTableIdx","addString","str","obfuscator","String","shouldObfuscate","obfuscateString","call","quoteString","replace","escapable","addCustomAttributes","attrs","attrParts","key","length","serializedValue","denyList","domainMatchesPattern","pattern","domain","indexOf","comparePath","path","substring","Aggregate","constructor","aggregator","super","this","ajaxEvents","spaAjaxEvents","sentAjaxEvents","scheduler","harvestTimeSeconds","MAX_PAYLOAD_SIZE","interaction","id","allAjaxIsEnabled","forEach","item","setDenyList","denyListConfig","i","url","firstSlash","hostname","pathname","args","storeXhr","onFinished","onEventsHarvestFinished","getPayload","prepareHarvest","harvest","body","take","startTimer","finalHarvest","getStoredEvents","params","metrics","startTime","endTime","hash","time","cat","stringify","status","host","handle","store","shouldCollectEvent","parsed","xhrContext","event","method","requestSize","txSize","responseSize","rxSize","callbackDuration","cbTime","dt","spanId","traceId","spanTimestamp","timestamp","spaNode","interactionId","errorBeacon","options","payload","maxPayloadSize","payloadObjs","e","retry","slice","events","chunks","chunkSize","eventChunks","splitChunks","tooBig","currentChunk","result","concat","arr","len","Chunk","fields","insert","jsAttributes","unshift","join"],"sourceRoot":""}