{"version":3,"file":"290.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./packages/channel-components/components/InitialScreen/components/CustomEmail/index.ts","webpack://TalkdeskChatSDK/./packages/channel-components/components/InitialScreen/components/CustomEmail/CustomEmail.tsx","webpack://TalkdeskChatSDK/./packages/channel-components/assets/warning.svg","webpack://TalkdeskChatSDK/./packages/channel-components/components/InitialScreen/components/ErrorMessage/index.ts","webpack://TalkdeskChatSDK/./packages/channel-components/components/InitialScreen/components/ErrorMessage/ErrorMessage.tsx"],"sourcesContent":["/*\n * Talkdesk Confidential\n *\n * Copyright (C) Talkdesk Inc. 2022\n *\n * The source code for this program is not published or otherwise divested\n * of its trade secrets, irrespective of what has been deposited with the\n * U.S. Copyright Office. Unauthorized copying of this file, via any medium\n * is strictly prohibited.\n */\nimport { CustomEmail } from './CustomEmail';\n\nexport default CustomEmail;\n","/*\n * Talkdesk Confidential\n *\n * Copyright (C) Talkdesk Inc. 2022\n *\n * The source code for this program is not published or otherwise divested\n * of its trade secrets, irrespective of what has been deposited with the\n * U.S. Copyright Office. Unauthorized copying of this file, via any medium\n * is strictly prohibited.\n */\nimport React, { useContext } from 'react';\nimport { WebchatContext } from '@botonic/react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport i18next from 'i18next';\nimport styles from './CustomEmail.module.css';\nimport commonStyles from '../../styles/common.module.css';\nimport { toLowerCase } from '../../utils/helper';\nimport ErrorMessage from '../ErrorMessage';\n\ninterface Props {\n  label: string;\n  onChange: () => void;\n  onBlur: () => void;\n  value: string;\n  isError: boolean;\n  required: boolean;\n}\n\nexport const CustomEmail: FC = React.forwardRef((props: Props, ref) => {\n  const { label, onChange, onBlur, value, isError, required } = props;\n\n  const {\n    webchatState: { theme },\n  } = useContext(WebchatContext);\n\n  return (\n    <div className={styles.customField}>\n      <div className={commonStyles.placeholder} />\n      <div className={styles.wrapper}>\n        <div className={styles.labelWrapper}>\n          <p\n            className={styles.label}\n            style={{\n              fontSize: theme?.initialScreen?.customFieldLabelFontSize,\n              fontFamily: theme?.initialScreen?.customFieldLabelFontFamily,\n              color: theme?.initialScreen?.customFieldLabelColor,\n            }}\n          >\n            {label}\n            {required ? <span className={commonStyles.isRequired}>*</span> : null}\n          </p>\n        </div>\n\n        <input\n          ref={ref}\n          value={value || ''}\n          autoComplete=\"off\"\n          className={clsx(styles.input, {\n            [commonStyles.isError]: isError,\n          })}\n          id=\"input\"\n          onChange={onChange}\n          onBlur={onBlur}\n          placeholder={i18next.t('customFieldPlaceholder', {\n            type: theme?.initialScreen?.customFieldInputPlaceholder || 'Type',\n            label: toLowerCase(label),\n            interpolation: { escapeValue: false },\n          })}\n          data-qa=\"test-email-field\"\n          style={{\n            fontSize: theme?.initialScreen?.customFieldInputFontSize,\n            fontFamily: theme?.initialScreen?.customFieldInputFontFamily,\n            color: theme?.initialScreen?.customFieldInputColor,\n            backgroundColor: theme?.initialScreen?.customFieldInputBackgroundColor,\n          }}\n        />\n        {isError && (\n          <ErrorMessage\n            message={\n              theme?.initialScreen?.customFieldEmailInvalidFormatMessage ??\n              i18next.t('errorEmailAddressWarning')\n            }\n          />\n        )}\n      </div>\n      <div className={commonStyles.placeholder} />\n    </div>\n  );\n});\n","export default __webpack_public_path__ + \"assets/warning.svg\";","/*\n * Talkdesk Confidential\n *\n * Copyright (C) Talkdesk Inc. 2022\n *\n * The source code for this program is not published or otherwise divested\n * of its trade secrets, irrespective of what has been deposited with the\n * U.S. Copyright Office. Unauthorized copying of this file, via any medium\n * is strictly prohibited.\n */\nimport ErrorMessage from './ErrorMessage';\n\nexport default ErrorMessage;\n","/*\n * Talkdesk Confidential\n *\n * Copyright (C) Talkdesk Inc. 2022\n *\n * The source code for this program is not published or otherwise divested\n * of its trade secrets, irrespective of what has been deposited with the\n * U.S. Copyright Office. Unauthorized copying of this file, via any medium\n * is strictly prohibited.\n */\nimport React from 'react';\nimport styles from './ErrorMessage.module.css';\nimport WarningIcon from '../../../../assets/warning.svg';\n\ninterface ErrorMessageProps {\n  message: string;\n}\n\nconst ErrorMessage = (props: ErrorMessageProps): JSX.Element => {\n  const { message } = props;\n\n  return (\n    <div className={styles.ErrorMessageWrap}>\n      <img alt=\"warning-icon\" className={styles.WarningIcon} src={WarningIcon} />\n      <div className={styles.MessageContent} data-qa=\"test-error-message\">\n        {message}\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n"],"names":["React","props","ref","_theme$initialScreen","_theme$initialScreen2","_theme$initialScreen3","_theme$initialScreen4","_theme$initialScreen5","_theme$initialScreen6","_theme$initialScreen7","_theme$initialScreen8","_theme$initialScreen$","_theme$initialScreen9","_newArrowCheck","label","onChange","onBlur","value","isError","required","theme","useContext","WebchatContext","webchatState","className","styles","customField","commonStyles","placeholder","wrapper","labelWrapper","style","fontSize","initialScreen","customFieldLabelFontSize","fontFamily","customFieldLabelFontFamily","color","customFieldLabelColor","isRequired","autoComplete","clsx","input","_defineProperty","id","i18next","type","customFieldInputPlaceholder","toLowerCase","interpolation","escapeValue","customFieldInputFontSize","customFieldInputFontFamily","customFieldInputColor","backgroundColor","customFieldInputBackgroundColor","ErrorMessage","message","customFieldEmailInvalidFormatMessage","bind","ErrorMessageWrap","alt","WarningIcon","src","MessageContent"],"sourceRoot":""}