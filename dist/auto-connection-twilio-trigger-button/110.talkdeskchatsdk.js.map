{"version":3,"file":"110.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/event-emitter/register-handler.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/url/parse-url.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/window/supports-performance-observer.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/session-trace/aggregate/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { handleEE, globalEE } from './handle'\n\n// export default defaultRegister\nexport { globalRegister as global }\nexport { defaultRegister as registerHandler }\n\ndefaultRegister.on = registerWithSpecificEmitter\n\nvar handlers = defaultRegister.handlers = {}\nvar globalHandlers = globalRegister.handlers = {}\n\nexport function defaultRegister (type, handler, group, ee) {\n  registerWithSpecificEmitter(ee || handleEE, handlers, type, handler, group)\n}\n\nfunction globalRegister (type, handler, group) {\n  registerWithSpecificEmitter(globalEE, globalHandlers, type, handler, group)\n}\n\nfunction registerWithSpecificEmitter (ee, handlers, type, handler, group) {\n  if (!group) group = 'feature'\n  if (!ee) ee = handleEE\n\n  if (ee.isBuffering(type)) {\n    var groupHandlers = handlers[group] = handlers[group] || {}\n    var list = groupHandlers[type] = groupHandlers[type] || []\n    list.push([ee, handler])\n  } else {\n    ee.on(type, handler)\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar stringsToParsedUrls = {}\n\nexport function parseUrl (url) {\n  if (url in stringsToParsedUrls) {\n    return stringsToParsedUrls[url]\n  }\n\n  var urlEl = document.createElement('a')\n  var location = window.location\n  var ret = {}\n\n  // Use an anchor dom element to resolve the url natively.\n  urlEl.href = url\n\n  ret.port = urlEl.port\n\n  var firstSplit = urlEl.href.split('://')\n\n  if (!ret.port && firstSplit[1]) {\n    ret.port = firstSplit[1].split('/')[0].split('@').pop().split(':')[1]\n  }\n  if (!ret.port || ret.port === '0') ret.port = (firstSplit[0] === 'https' ? '443' : '80')\n\n  // Host not provided in IE for relative urls\n  ret.hostname = (urlEl.hostname || location.hostname)\n\n  ret.pathname = urlEl.pathname\n\n  ret.protocol = firstSplit[0]\n\n  // Pathname sometimes doesn't have leading slash (IE 8 and 9)\n  if (ret.pathname.charAt(0) !== '/') ret.pathname = '/' + ret.pathname\n\n  // urlEl.protocol is ':' in old ie when protocol is not specified\n  var sameProtocol = !urlEl.protocol || urlEl.protocol === ':' || urlEl.protocol === location.protocol\n  var sameDomain = urlEl.hostname === document.domain && urlEl.port === location.port\n\n  // urlEl.hostname is not provided by IE for relative urls, but relative urls are also same-origin\n  ret.sameOrigin = sameProtocol && (!urlEl.hostname || sameDomain)\n\n  // Only cache if url doesn't have a path\n  if (ret.pathname === '/') {\n    stringsToParsedUrls[url] = ret\n  }\n\n  return ret\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function supportsPerformanceObserver () {\n  return 'PerformanceObserver' in window && typeof window.PerformanceObserver === 'function'\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { registerHandler } from '../../../common/event-emitter/register-handler'\nimport { xhrUsable } from '../../../common/harvest/harvest'\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler'\nimport { mapOwn } from '../../../common/util/map-own'\nimport { reduce } from '../../../common/util/reduce'\nimport { stringify } from '../../../common/util/stringify'\nimport { parseUrl } from '../../../common/url/parse-url'\nimport { supportsPerformanceObserver } from '../../../common/window/supports-performance-observer'\nimport slice from 'lodash._slice'\nimport { getConfigurationValue, getInfo, getRuntime } from '../../../common/config/config'\nimport { findStartTime } from '../../../common/timing/start-time'\nimport { now } from '../../../common/timing/now'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nexport class Aggregate extends FeatureBase {\n  constructor(agentIdentifier, aggregator) {\n    super(agentIdentifier, aggregator)\n    this.ptid = ''\n    this.ignoredEvents = {\n      // we find that certain events make the data too noisy to be useful\n      global: { mouseup: true, mousedown: true },\n      // certain events are present both in the window and in PVT metrics.  PVT metrics are prefered so the window events should be ignored\n      window: { load: true, pagehide: true }\n    }\n    this.toAggregate = {\n      typing: [1000, 2000],\n      scrolling: [100, 1000],\n      mousing: [1000, 2000],\n      touching: [1000, 2000]\n    }\n\n    this.rename = {\n      typing: {\n        keydown: true,\n        keyup: true,\n        keypress: true\n      },\n      mousing: {\n        mousemove: true,\n        mouseenter: true,\n        mouseleave: true,\n        mouseover: true,\n        mouseout: true\n      },\n      scrolling: {\n        scroll: true\n      },\n      touching: {\n        touchstart: true,\n        touchmove: true,\n        touchend: true,\n        touchcancel: true,\n        touchenter: true,\n        touchleave: true\n      }\n    }\n\n    this.trace = {}\n    this.nodeCount = 0\n    this.sentTrace = null\n    this.harvestTimeSeconds = getConfigurationValue(this.agentIdentifier, 'stn.harvestTimeSeconds') || 10\n    this.maxNodesPerHarvest = getConfigurationValue(this.agentIdentifier, 'stn.maxNodesPerHarvest') || 1000\n\n    this.laststart = 0\n\n    findStartTime()\n\n    if (!xhrUsable) return\n    // bail if not instrumented\n    if (!getRuntime(this.agentIdentifier).features.stn) return\n\n    // ee.on('feat-stn', () => {\n    this.storeTiming(window.performance.timing)\n\n    // onHarvest('resources', prepareHarvest)\n\n    var scheduler = new HarvestScheduler('resources', {\n      onFinished: (...args) => onHarvestFinished(...args),\n      retryDelay: (...args) => this.harvestTimeSeconds(...args)\n      // onUnload: () => this.finalHarvest() // no special actions needed before unloading\n    })\n    scheduler.runHarvest({ needResponse: true })\n    scheduler.harvest.on('resources', (...args) => prepareHarvest(...args))\n\n    function onHarvestFinished(result) {\n      // start timer only if ptid was returned by server\n      if (result.sent && result.responseText && !this.ptid) {\n        this.ptid = result.responseText\n        getRuntime(this.agentIdentifier).ptid = this.ptid\n        scheduler.startTimer(this.harvestTimeSeconds)\n      }\n\n      if (result.sent && result.retry && this.sentTrace) {\n        mapOwn(this.sentTrace, function (name, nodes) {\n          this.mergeSTNs(name, nodes)\n        })\n        this.sentTrace = null\n      }\n    }\n\n    function prepareHarvest(options) {\n      if ((now()) > (15 * 60 * 1000)) {\n        // been collecting for over 15 min, empty trace object and bail\n        scheduler.stopTimer()\n        this.trace = {}\n        return\n      }\n\n      // only send when there are more than 30 nodes to send\n      if (this.ptid && this.nodeCount <= 30) return\n\n      return this.takeSTNs(options.retry)\n    }\n\n    registerHandler('bst', (...args) => this.storeEvent(...args), undefined, this.ee)\n    registerHandler('bstTimer', (...args) => this.storeTimer(...args), undefined, this.ee)\n    registerHandler('bstResource', (...args) => this.storeResources(...args), undefined, this.ee)\n    registerHandler('bstHist', (...args) => this.storeHist(...args), undefined, this.ee)\n    registerHandler('bstXhrAgg', (...args) => this.storeXhrAgg(...args), undefined, this.ee)\n    registerHandler('bstApi', (...args) => this.storeSTN(...args), undefined, this.ee)\n    registerHandler('errorAgg', (...args) => this.storeErrorAgg(...args), undefined, this.ee)\n    registerHandler('pvtAdded', (...args) => this.processPVT(...args), undefined, this.ee)\n    // })\n  }\n\n  processPVT(name, value, attrs) {\n    var t = {}\n    t[name] = value\n    this.storeTiming(t, true)\n    if (this.hasFID(name, attrs)) this.storeEvent({ type: 'fid', target: 'document' }, 'document', value, value + attrs.fid)\n  }\n\n  storeTiming(_t, ignoreOffset) {\n    var key\n    var val\n    var timeOffset\n    var dateNow = Date.now()\n\n    // loop iterates through prototype also (for FF)\n    for (key in _t) {\n      val = _t[key]\n\n      // ignore inherited methods, meaningless 0 values, and bogus timestamps\n      // that are in the future (Microsoft Edge seems to sometimes produce these)\n      if (!(typeof (val) === 'number' && val > 0 && val < dateNow)) continue\n\n      timeOffset = !ignoreOffset ? _t[key] - getRuntime(this.agentIdentifier).offset : _t[key]\n\n      this.storeSTN({\n        n: key,\n        s: timeOffset,\n        e: timeOffset,\n        o: 'document',\n        t: 'timing'\n      })\n    }\n  }\n\n  storeTimer(target, start, end, type) {\n    var category = 'timer'\n    if (type === 'requestAnimationFrame') category = type\n\n    var evt = {\n      n: type,\n      s: start,\n      e: end,\n      o: 'window',\n      t: category\n    }\n\n    this.storeSTN(evt)\n  }\n\n  storeEvent(currentEvent, target, start, end) {\n    if (this.shouldIgnoreEvent(currentEvent, target)) return false\n\n    var evt = {\n      n: this.evtName(currentEvent.type),\n      s: start,\n      e: end,\n      t: 'event'\n    }\n\n    try {\n    // webcomponents-lite.js can trigger an exception on currentEvent.target getter because\n    // it does not check currentEvent.currentTarget before calling getRootNode() on it\n      evt.o = this.evtOrigin(currentEvent.target, target)\n    } catch (e) {\n      evt.o = this.evtOrigin(null, target)\n    }\n\n    this.storeSTN(evt)\n  }\n\n  evtName(type) {\n    var name = type\n\n    mapOwn(this.rename, function (key, val) {\n      if (type in val) name = key\n    })\n\n    return name\n  }\n\n  evtOrigin(t, target) {\n    var origin = 'unknown'\n\n    if (t && t instanceof XMLHttpRequest) {\n      var params = this.ee.context(t).params\n      origin = params.status + ' ' + params.method + ': ' + params.host + params.pathname\n    } else if (t && typeof (t.tagName) === 'string') {\n      origin = t.tagName.toLowerCase()\n      if (t.id) origin += '#' + t.id\n      if (t.className) origin += '.' + slice(t.classList).join('.')\n    }\n\n    if (origin === 'unknown') {\n      if (typeof target === 'string') origin = target\n      else if (target === document) origin = 'document'\n      else if (target === window) origin = 'window'\n      else if (target instanceof FileReader) origin = 'FileReader'\n    }\n\n    return origin\n  }\n\n  storeHist(path, old, time) {\n    var node = {\n      n: 'history.pushState',\n      s: time,\n      e: time,\n      o: path,\n      t: old\n    }\n\n    this.storeSTN(node)\n  }\n\n  storeResources(resources) {\n    if (!resources || resources.length === 0) return\n\n    resources.forEach(function (currentResource) {\n      var parsed = parseUrl(currentResource.name)\n      var res = {\n        n: currentResource.initiatorType,\n        s: currentResource.fetchStart | 0,\n        e: currentResource.responseEnd | 0,\n        o: parsed.protocol + '://' + parsed.hostname + ':' + parsed.port + parsed.pathname, // resource.name is actually a URL so it's the source\n        t: currentResource.entryType\n      }\n\n      // don't recollect old resources\n      if (res.s <= this.laststart) return\n\n      this.storeSTN(res)\n    })\n\n    this.laststart = resources[resources.length - 1].fetchStart | 0\n  }\n\n  storeErrorAgg(type, name, params, metrics) {\n    if (type !== 'err') return\n    var node = {\n      n: 'error',\n      s: metrics.time,\n      e: metrics.time,\n      o: params.message,\n      t: params.stackHash\n    }\n    this.storeSTN(node)\n  }\n\n  storeXhrAgg(type, name, params, metrics) {\n    if (type !== 'xhr') return\n    var node = {\n      n: 'Ajax',\n      s: metrics.time,\n      e: metrics.time + metrics.duration,\n      o: params.status + ' ' + params.method + ': ' + params.host + params.pathname,\n      t: 'ajax'\n    }\n    this.storeSTN(node)\n  }\n\n  storeSTN(stn) {\n  // limit the number of data that is stored\n    if (this.nodeCount >= this.maxNodesPerHarvest) return\n\n    var traceArr = this.trace[stn.n]\n    if (!traceArr) traceArr = this.trace[stn.n] = []\n\n    traceArr.push(stn)\n    this.nodeCount++\n  }\n\n  mergeSTNs(key, nodes) {\n  // limit the number of data that is stored\n    if (this.nodeCount >= this.maxNodesPerHarvest) return\n\n    var traceArr = this.trace[key]\n    if (!traceArr) traceArr = this.trace[key] = []\n\n    this.trace[key] = nodes.concat(traceArr)\n    this.nodeCount += nodes.length\n  }\n\n  takeSTNs(retry) {\n  // if the observer is not being used, this checks resourcetiming buffer every harvest\n    if (!supportsPerformanceObserver()) {\n      this.storeResources(window.performance.getEntriesByType('resource'))\n    }\n\n    var stns = reduce(mapOwn(this.trace, function (name, nodes) {\n      if (!(name in this.toAggregate)) return nodes\n\n      return reduce(mapOwn(reduce(nodes.sort(this.byStart), this.smearEvtsByOrigin(name), {}), this.val), this.flatten, [])\n    }), this.flatten, [])\n\n    if (stns.length === 0) return {}\n\n    if (retry) {\n      this.sentTrace = this.trace\n    }\n    this.trace = {}\n    this.nodeCount = 0\n\n    var stnInfo = {\n      qs: { st: '' + getRuntime(this.agentIdentifier).offset },\n      body: { res: stns }\n    }\n\n    if (!this.ptid) {\n      const {userAttributes, atts, jsAttributes} = getInfo(this.agentIdentifier)\n      stnInfo.qs.ua = userAttributes\n      stnInfo.qs.at = atts\n      var ja = stringify(jsAttributes)\n      stnInfo.qs.ja = ja === '{}' ? null : ja\n    }\n    return stnInfo\n  }\n\n  byStart(a, b) {\n    return a.s - b.s\n  }\n\n  smearEvtsByOrigin(name) {\n    var maxGap = this.toAggregate[name][0]\n    var maxLen = this.toAggregate[name][1]\n    var lastO = {}\n\n    return function (byOrigin, evt) {\n      var lastArr = byOrigin[evt.o]\n\n      lastArr || (lastArr = byOrigin[evt.o] = [])\n\n      var last = lastO[evt.o]\n\n      if (name === 'scrolling' && !this.trivial(evt)) {\n        lastO[evt.o] = null\n        evt.n = 'scroll'\n        lastArr.push(evt)\n      } else if (last && (evt.s - last.s) < maxLen && last.e > (evt.s - maxGap)) {\n        last.e = evt.e\n      } else {\n        lastO[evt.o] = evt\n        lastArr.push(evt)\n      }\n\n      return byOrigin\n    }\n  }\n\n  val(key, value) {\n    return value\n  }\n\n  flatten(a, b) {\n    return a.concat(b)\n  }\n\n  hasFID(name, attrs) {\n    return name === 'fi' && !!attrs && typeof attrs.fid === 'number'\n  }\n\n  trivial(node) {\n    var limit = 4\n    if (node && typeof node.e === 'number' && typeof node.s === 'number' && (node.e - node.s) < limit) return true\n    else return false\n  }\n\n  shouldIgnoreEvent(event, target) {\n    var origin = this.evtOrigin(event.target, target)\n    if (event.type in this.ignoredEvents.global) return true\n    if (!!this.ignoredEvents[origin] && event.type in this.ignoredEvents[origin]) return true\n    return false\n  }\n}\n"],"names":["defaultRegister","on","registerWithSpecificEmitter","handlers","globalHandlers","globalRegister","type","handler","group","ee","isBuffering","groupHandlers","push","stringsToParsedUrls","parseUrl","url","urlEl","document","createElement","location","window","ret","href","port","firstSplit","split","pop","hostname","pathname","protocol","charAt","sameProtocol","sameDomain","domain","sameOrigin","supportsPerformanceObserver","PerformanceObserver","Aggregate","constructor","agentIdentifier","aggregator","super","this","ptid","ignoredEvents","global","mouseup","mousedown","load","pagehide","toAggregate","typing","scrolling","mousing","touching","rename","keydown","keyup","keypress","mousemove","mouseenter","mouseleave","mouseover","mouseout","scroll","touchstart","touchmove","touchend","touchcancel","touchenter","touchleave","trace","nodeCount","sentTrace","harvestTimeSeconds","maxNodesPerHarvest","laststart","features","stn","storeTiming","performance","timing","scheduler","onFinished","args","onHarvestFinished","result","sent","responseText","startTimer","retry","name","nodes","mergeSTNs","retryDelay","runHarvest","needResponse","harvest","prepareHarvest","options","stopTimer","takeSTNs","storeEvent","undefined","storeTimer","storeResources","storeHist","storeXhrAgg","storeSTN","storeErrorAgg","processPVT","value","attrs","t","hasFID","target","fid","_t","ignoreOffset","key","val","timeOffset","dateNow","Date","now","offset","n","s","e","o","start","end","category","evt","currentEvent","shouldIgnoreEvent","evtName","evtOrigin","origin","XMLHttpRequest","params","context","status","method","host","tagName","toLowerCase","id","className","classList","join","FileReader","path","old","time","node","resources","length","forEach","currentResource","parsed","res","initiatorType","fetchStart","responseEnd","entryType","metrics","message","stackHash","duration","traceArr","concat","getEntriesByType","stns","sort","byStart","smearEvtsByOrigin","flatten","stnInfo","qs","st","body","userAttributes","atts","jsAttributes","ua","at","ja","a","b","maxGap","maxLen","lastO","byOrigin","lastArr","last","trivial","event"],"sourceRoot":""}