{"version":3,"file":"706.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/browser-version/firefox-version.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/url/parse-url.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/ids/id.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/util/data-size.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/ajax/instrument/distributed-tracing.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/ajax/instrument/index.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/ajax/instrument/response-size.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable no-useless-escape */\n\nexport var ffVersion = 0\nvar match = navigator.userAgent.match(/Firefox[\\/\\s](\\d+\\.\\d+)/)\nif (match) ffVersion = +match[1]\n// export default { ffVersion }\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar stringsToParsedUrls = {}\n\nexport function parseUrl (url) {\n  if (url in stringsToParsedUrls) {\n    return stringsToParsedUrls[url]\n  }\n\n  var urlEl = document.createElement('a')\n  var location = window.location\n  var ret = {}\n\n  // Use an anchor dom element to resolve the url natively.\n  urlEl.href = url\n\n  ret.port = urlEl.port\n\n  var firstSplit = urlEl.href.split('://')\n\n  if (!ret.port && firstSplit[1]) {\n    ret.port = firstSplit[1].split('/')[0].split('@').pop().split(':')[1]\n  }\n  if (!ret.port || ret.port === '0') ret.port = (firstSplit[0] === 'https' ? '443' : '80')\n\n  // Host not provided in IE for relative urls\n  ret.hostname = (urlEl.hostname || location.hostname)\n\n  ret.pathname = urlEl.pathname\n\n  ret.protocol = firstSplit[0]\n\n  // Pathname sometimes doesn't have leading slash (IE 8 and 9)\n  if (ret.pathname.charAt(0) !== '/') ret.pathname = '/' + ret.pathname\n\n  // urlEl.protocol is ':' in old ie when protocol is not specified\n  var sameProtocol = !urlEl.protocol || urlEl.protocol === ':' || urlEl.protocol === location.protocol\n  var sameDomain = urlEl.hostname === document.domain && urlEl.port === location.port\n\n  // urlEl.hostname is not provided by IE for relative urls, but relative urls are also same-origin\n  ret.sameOrigin = sameProtocol && (!urlEl.hostname || sameDomain)\n\n  // Only cache if url doesn't have a path\n  if (ret.pathname === '/') {\n    stringsToParsedUrls[url] = ret\n  }\n\n  return ret\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Start assigning ids at 1 so 0 can always be used for window, without\n// actually setting it (which would create a global variable).\nimport { getOrSet } from '../util/get-or-set'\nvar index = 1\nvar prop = 'nr@id'\n\n// export default id\n\n// Always returns id of obj, may tag obj with an id in the process.\nexport function id (obj) {\n  var type = typeof obj\n  // We can only tag objects, functions, and arrays with ids.\n  // For all primitive values we instead return -1.\n  if (!obj || !(type === 'object' || type === 'function')) return -1\n  if (obj === window) return 0\n\n  return getOrSet(obj, prop, function () { return index++ })\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function dataSize (data) {\n  if (typeof data === 'string' && data.length) return data.length\n  if (typeof data !== 'object') return undefined\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer && data.byteLength) return data.byteLength\n  if (typeof Blob !== 'undefined' && data instanceof Blob && data.size) return data.size\n  if (typeof FormData !== 'undefined' && data instanceof FormData) return undefined\n\n  try {\n    return JSON.stringify(data).length\n  } catch (e) {\n    return undefined\n  }\n}\n\n// export default dataSize\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { getConfiguration, getConfigurationValue, getLoaderConfig } from '../../../common/config/config'\nimport { generateSpanId, generateTraceId } from '../../../common/ids/unique-id'\nimport { parseUrl } from '../../../common/url/parse-url'\n\nexport class DT {\n  constructor(agentIdentifier) {\n    this.agentIdentifier = agentIdentifier\n  }\n\n  generateTracePayload (parsedOrigin) {\n    if (!this.shouldGenerateTrace(parsedOrigin)) {\n      return null\n    }\n\n    var loader_config = getLoaderConfig(this.agentIdentifier)\n    if (!loader_config) {\n      return null\n    }\n\n    var accountId = (loader_config.accountID || '').toString() || null\n    var agentId = (loader_config.agentID || '').toString() || null\n    var trustKey = (loader_config.trustKey || '').toString() || null\n\n    if (!accountId || !agentId) {\n      return null\n    }\n\n    var spanId = generateSpanId()\n    var traceId = generateTraceId()\n    var timestamp = Date.now()\n\n    var payload = {\n      spanId: spanId,\n      traceId: traceId,\n      timestamp: timestamp\n    }\n\n    if (parsedOrigin.sameOrigin ||\n        (this.isAllowedOrigin(parsedOrigin) && this.useTraceContextHeadersForCors())) {\n      payload.traceContextParentHeader = this.generateTraceContextParentHeader(spanId, traceId)\n      payload.traceContextStateHeader = this.generateTraceContextStateHeader(spanId, timestamp,\n        accountId, agentId, trustKey)\n    }\n\n    if ((parsedOrigin.sameOrigin && !this.excludeNewrelicHeader()) ||\n        (!parsedOrigin.sameOrigin && this.isAllowedOrigin(parsedOrigin) && this.useNewrelicHeaderForCors())) {\n      payload.newrelicHeader = this.generateTraceHeader(spanId, traceId, timestamp, accountId,\n        agentId, trustKey)\n    }\n\n    return payload\n  }\n\n  generateTraceContextParentHeader(spanId, traceId) {\n    return '00-' + traceId + '-' + spanId + '-01'\n  }\n\n  generateTraceContextStateHeader(spanId, timestamp, accountId, appId, trustKey) {\n    var version = 0\n    var transactionId = ''\n    var parentType = 1\n    var sampled = ''\n    var priority = ''\n\n    return trustKey + '@nr=' + version + '-' + parentType + '-' + accountId +\n      '-' + appId + '-' + spanId + '-' + transactionId + '-' + sampled + '-' + priority + '-' + timestamp\n  }\n\n  generateTraceHeader (spanId, traceId, timestamp, accountId, appId, trustKey) {\n    var hasBtoa = ('btoa' in window && typeof window.btoa === 'function')\n    if (!hasBtoa) {\n      return null\n    }\n\n    var payload = {\n      v: [0, 1],\n      d: {\n        ty: 'Browser',\n        ac: accountId,\n        ap: appId,\n        id: spanId,\n        tr: traceId,\n        ti: timestamp\n      }\n    }\n    if (trustKey && accountId !== trustKey) {\n      payload.d.tk = trustKey\n    }\n\n    return btoa(JSON.stringify(payload))\n  }\n\n  // return true if DT is enabled and the origin is allowed, either by being\n  // same-origin, or included in the allowed list\n  shouldGenerateTrace (parsedOrigin) {\n    return this.isDtEnabled() && this.isAllowedOrigin(parsedOrigin)\n  }\n\n  isAllowedOrigin(parsedOrigin) {\n    var allowed = false\n    var dtConfig = {}\n    var dt = getConfigurationValue('distributed_tracing')\n\n    if (dt) {\n      dtConfig = getConfiguration().distributed_tracing\n    }\n\n    if (parsedOrigin.sameOrigin) {\n      allowed = true\n    } else if (dtConfig.allowed_origins instanceof Array) {\n      for (var i = 0; i < dtConfig.allowed_origins.length; i++) {\n        var allowedOrigin = parseUrl(dtConfig.allowed_origins[i])\n        if (parsedOrigin.hostname === allowedOrigin.hostname &&\n            parsedOrigin.protocol === allowedOrigin.protocol &&\n            parsedOrigin.port === allowedOrigin.port) {\n          allowed = true\n          break\n        }\n      }\n    }\n    return allowed\n  }\n\n  isDtEnabled() {\n    var dt = getConfigurationValue(this.agentIdentifier, 'distributed_tracing')\n    if (dt) {\n      return !!dt.enabled\n    }\n    return false\n  }\n\n  // exclude the newrelic header for same-origin calls\n  excludeNewrelicHeader() {\n    var dt = getConfigurationValue(this.agentIdentifier, 'distributed_tracing')\n    if (dt) {\n      return !!dt.exclude_newrelic_header\n    }\n    return false\n  }\n\n  useNewrelicHeaderForCors() {\n    var dt = getConfigurationValue(this.agentIdentifier, 'distributed_tracing')\n    if (dt) {\n      return dt.cors_use_newrelic_header !== false\n    }\n    return false\n  }\n\n  useTraceContextHeadersForCors() {\n    var dt = getConfigurationValue(this.agentIdentifier, 'distributed_tracing')\n    if (dt) {\n      return !dt.cors_use_tracecontext_headers\n    }\n    return false\n  }\n}\n\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { originals, getLoaderConfig, getRuntime } from '../../../common/config/config'\nimport { handle } from '../../../common/event-emitter/handle'\nimport { ee } from '../../../common/event-emitter/contextual-ee'\nimport { id } from '../../../common/ids/id'\nimport { ffVersion } from '../../../common/browser-version/firefox-version'\nimport { dataSize } from '../../../common/util/data-size'\nimport { eventListenerOpts } from '../../../common/event-listener/event-listener-opts'\nimport { now } from '../../../common/timing/now'\nimport {wrapFetch} from '../../../common/wrap'\nimport { parseUrl } from '../../../common/url/parse-url'\nimport { DT } from './distributed-tracing'\nimport {responseSizeFromXhr} from './response-size'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nvar handlers = [ 'load', 'error', 'abort', 'timeout' ]\nvar handlersLen = handlers.length\n\nvar origRequest = originals.REQ\nvar origXHR = window.XMLHttpRequest\n\nexport class Instrument extends FeatureBase {\n  constructor(agentIdentifier) {\n    super(agentIdentifier)\n    // Don't instrument Chrome for iOS, it is buggy and acts like there are URL verification issues\n    if (!getRuntime(this.agentIdentifier).xhrWrappable || getRuntime(this.agentIdentifier).disabled) return\n\n    this.dt = new DT(this.agentIdentifier)\n  }\n}\n\n// TODO update all of this to go into class and use this.ee for ee, handle, and register\n\nexport function getWrappedFetch() {\n  var wrappedFetch = wrapFetch(ee)\n  subscribeToEvents(ee, handle)\n  return wrappedFetch\n}\n\nfunction subscribeToEvents(ee, handle) {\n  ee.on('new-xhr', onNewXhr)\n  ee.on('open-xhr-start', onOpenXhrStart)\n  ee.on('open-xhr-end', onOpenXhrEnd)\n  ee.on('send-xhr-start', onSendXhrStart)\n  ee.on('xhr-cb-time', onXhrCbTime)\n  ee.on('xhr-load-added', onXhrLoadAdded)\n  ee.on('xhr-load-removed', onXhrLoadRemoved)\n  ee.on('xhr-resolved', onXhrResolved)\n  ee.on('addEventListener-end', onAddEventListenerEnd)\n  ee.on('removeEventListener-end', onRemoveEventListenerEnd)\n  ee.on('fn-end', onFnEnd)\n  ee.on('fetch-before-start', onFetchBeforeStart)\n  ee.on('fetch-start', onFetchStart)\n  ee.on('fn-start', onFnStart)\n  ee.on('fetch-done', onFetchDone)\n\n  // Setup the context for each new xhr object\n  function onNewXhr(xhr) {\n    var ctx = this\n    ctx.totalCbs = 0\n    ctx.called = 0\n    ctx.cbTime = 0\n    ctx.end = end\n    ctx.ended = false\n    ctx.xhrGuids = {}\n    ctx.lastSize = null\n    ctx.loadCaptureCalled = false\n    ctx.params = this.params || {}\n    ctx.metrics = this.metrics || {}\n\n    xhr.addEventListener('load', function (event) {\n      captureXhrData(ctx, xhr)\n    }, eventListenerOpts(false))\n\n    // In Firefox 34+, XHR ProgressEvents report pre-content-decoding sizes via\n    // their 'loaded' property, rather than post-decoding sizes. We want\n    // post-decoding sizes for consistency with browsers where that's all we have.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1227674\n    //\n    // In really old versions of Firefox (older than somewhere between 5 and 10),\n    // we don't reliably get a final XHR ProgressEvent which reflects the full\n    // size of the transferred resource.\n    //\n    // So, in both of these cases, we fall back to not using ProgressEvents to\n    // measure XHR sizes.\n\n    if (ffVersion && (ffVersion > 34 || ffVersion < 10)) return\n\n    xhr.addEventListener('progress', function (event) {\n      ctx.lastSize = event.loaded\n    }, eventListenerOpts(false))\n  }\n\n  function onOpenXhrStart(args) {\n    this.params = { method: args[0] }\n    addUrl(this, args[1])\n    this.metrics = {}\n  }\n\n  function onOpenXhrEnd(args, xhr) {\n    var loader_config = getLoaderConfig()\n    if ('xpid' in loader_config && this.sameOrigin) {\n      xhr.setRequestHeader('X-NewRelic-ID', loader_config.xpid)\n    }\n\n    var payload = this.dt.generateTracePayload(this.parsedOrigin)\n    if (payload) {\n      var added = false\n      if (payload.newrelicHeader) {\n        xhr.setRequestHeader('newrelic', payload.newrelicHeader)\n        added = true\n      }\n      if (payload.traceContextParentHeader) {\n        xhr.setRequestHeader('traceparent', payload.traceContextParentHeader)\n        if (payload.traceContextStateHeader) {\n          xhr.setRequestHeader('tracestate', payload.traceContextStateHeader)\n        }\n        added = true\n      }\n      if (added) {\n        this.dt = payload\n      }\n    }\n  }\n\n  function onSendXhrStart(args, xhr) {\n    var metrics = this.metrics\n    var data = args[0]\n    var context = this\n\n    if (metrics && data) {\n      var size = dataSize(data)\n      if (size) metrics.txSize = size\n    }\n\n    this.startTime = now()\n\n    this.listener = function (evt) {\n      try {\n        if (evt.type === 'abort' && !(context.loadCaptureCalled)) {\n          context.params.aborted = true\n        }\n        if (evt.type !== 'load' || (context.called === context.totalCbs) && (context.onloadCalled || typeof (xhr.onload) !== 'function')) context.end(xhr)\n      } catch (e) {\n        try {\n          ee.emit('internal-error', [e])\n        } catch (err) {\n          // do nothing\n        }\n      }\n    }\n\n    for (var i = 0; i < handlersLen; i++) {\n      xhr.addEventListener(handlers[i], this.listener, eventListenerOpts(false))\n    }\n  }\n\n  function onXhrCbTime(time, onload, xhr) {\n    this.cbTime += time\n    if (onload) this.onloadCalled = true\n    else this.called += 1\n    if ((this.called === this.totalCbs) && (this.onloadCalled || typeof (xhr.onload) !== 'function')) this.end(xhr)\n  }\n\n  function onXhrLoadAdded(cb, useCapture) {\n    // Ignore if the same arguments are passed to addEventListener twice\n    var idString = '' + id(cb) + !!useCapture\n    if (!this.xhrGuids || this.xhrGuids[idString]) return\n    this.xhrGuids[idString] = true\n\n    this.totalCbs += 1\n  }\n\n  function onXhrLoadRemoved(cb, useCapture) {\n    // Ignore if event listener didn't exist for this xhr object\n    var idString = '' + id(cb) + !!useCapture\n    if (!this.xhrGuids || !this.xhrGuids[idString]) return\n    delete this.xhrGuids[idString]\n\n    this.totalCbs -= 1\n  }\n\n  function onXhrResolved() {\n    this.endTime = now()\n  }\n\n  // Listen for load listeners to be added to xhr objects\n  function onAddEventListenerEnd(args, xhr) {\n    if (xhr instanceof origXHR && args[0] === 'load') ee.emit('xhr-load-added', [args[1], args[2]], xhr)\n  }\n\n  function onRemoveEventListenerEnd(args, xhr) {\n    if (xhr instanceof origXHR && args[0] === 'load') ee.emit('xhr-load-removed', [args[1], args[2]], xhr)\n  }\n\n  // Listen for those load listeners to be called.\n  function onFnStart(args, xhr, methodName) {\n    if (xhr instanceof origXHR) {\n      if (methodName === 'onload') this.onload = true\n      if ((args[0] && args[0].type) === 'load' || this.onload) this.xhrCbStart = now()\n    }\n  }\n\n  function onFnEnd(args, xhr) {\n    if (this.xhrCbStart) ee.emit('xhr-cb-time', [now() - this.xhrCbStart, this.onload, xhr], xhr)\n  }\n\n  // this event only handles DT\n  function onFetchBeforeStart(args) {\n    var opts = args[1] || {}\n    var url\n    // argument is USVString\n    if (typeof args[0] === 'string') {\n      url = args[0]\n    // argument is Request object\n    } else if (args[0] && args[0].url) {\n      url = args[0].url\n    // argument is URL object\n    } else if (window.URL && args[0] && args[0] instanceof URL) {\n      url = args[0].href\n    }\n\n    if (url) {\n      this.parsedOrigin = parseUrl(url)\n      this.sameOrigin = this.parsedOrigin.sameOrigin\n    }\n\n    var payload = this.dt.generateTracePayload(this.parsedOrigin)\n    if (!payload || (!payload.newrelicHeader && !payload.traceContextParentHeader)) {\n      return\n    }\n\n    if (typeof args[0] === 'string' || (window.URL && args[0] && args[0] instanceof URL)) {\n      var clone = {}\n\n      for (var key in opts) {\n        clone[key] = opts[key]\n      }\n\n      clone.headers = new Headers(opts.headers || {})\n      if (addHeaders(clone.headers, payload)) {\n        this.dt = payload\n      }\n\n      if (args.length > 1) {\n        args[1] = clone\n      } else {\n        args.push(clone)\n      }\n    } else if (args[0] && args[0].headers) {\n      if (addHeaders(args[0].headers, payload)) {\n        this.dt = payload\n      }\n    }\n\n    function addHeaders(headersObj, payload) {\n      var added = false\n      if (payload.newrelicHeader) {\n        headersObj.set('newrelic', payload.newrelicHeader)\n        added = true\n      }\n      if (payload.traceContextParentHeader) {\n        headersObj.set('traceparent', payload.traceContextParentHeader)\n        if (payload.traceContextStateHeader) {\n          headersObj.set('tracestate', payload.traceContextStateHeader)\n        }\n        added = true\n      }\n      return added\n    }\n  }\n\n  function onFetchStart(fetchArguments, dtPayload) {\n    this.params = {}\n    this.metrics = {}\n    this.startTime = now()\n    this.dt = dtPayload\n\n    if (fetchArguments.length >= 1) this.target = fetchArguments[0]\n    if (fetchArguments.length >= 2) this.opts = fetchArguments[1]\n\n    var opts = this.opts || {}\n    var target = this.target\n\n    var url\n    if (typeof target === 'string') {\n      url = target\n    } else if (typeof target === 'object' && target instanceof origRequest) {\n      url = target.url\n    } else if (window.URL && typeof target === 'object' && target instanceof URL) {\n      url = target.href\n    }\n    addUrl(this, url)\n\n    var method = ('' + ((target && target instanceof origRequest && target.method) ||\n      opts.method || 'GET')).toUpperCase()\n    this.params.method = method\n\n    this.txSize = dataSize(opts.body) || 0\n  }\n\n  // we capture failed call as status 0, the actual error is ignored\n  // eslint-disable-next-line handle-callback-err\n  function onFetchDone(err, res) {\n    this.endTime = now()\n    if (!this.params) {\n      this.params = {}\n    }\n    this.params.status = res ? res.status : 0\n\n    // convert rxSize to a number\n    var responseSize\n    if (typeof this.rxSize === 'string' && this.rxSize.length > 0) {\n      responseSize = +this.rxSize\n    }\n\n    var metrics = {\n      txSize: this.txSize,\n      rxSize: responseSize,\n      duration: now() - this.startTime\n    }\n\n    handle('xhr', [this.params, metrics, this.startTime, this.endTime, 'fetch'], this)\n  }\n\n  // Create report for XHR request that has finished\n  function end (xhr) {\n    var params = this.params\n    var metrics = this.metrics\n\n    if (this.ended) return\n    this.ended = true\n\n    for (var i = 0; i < handlersLen; i++) {\n      xhr.removeEventListener(handlers[i], this.listener, false)\n    }\n\n    if (params.aborted) return\n    metrics.duration = now() - this.startTime\n    if (!this.loadCaptureCalled && xhr.readyState === 4) {\n      captureXhrData(this, xhr)\n    } else if (params.status == null) {\n      params.status = 0\n    }\n\n    // Always send cbTime, even if no noticeable time was taken.\n    metrics.cbTime = this.cbTime\n\n    handle('xhr', [params, metrics, this.startTime, this.endTime, 'xhr'], this)\n  }\n\n  function addUrl (ctx, url) {\n    var parsed = parseUrl(url)\n    var params = ctx.params\n\n    params.hostname = parsed.hostname\n    params.port = parsed.port\n    params.protocol = parsed.protocol\n    params.host = parsed.hostname + ':' + parsed.port\n    params.pathname = parsed.pathname\n    ctx.parsedOrigin = parsed\n    ctx.sameOrigin = parsed.sameOrigin\n  }\n\n  function captureXhrData (ctx, xhr) {\n    ctx.params.status = xhr.status\n\n    var size = responseSizeFromXhr(xhr, ctx.lastSize)\n    if (size) ctx.metrics.rxSize = size\n\n    if (ctx.sameOrigin) {\n      var header = xhr.getResponseHeader('X-NewRelic-App-Data')\n      if (header) {\n        ctx.params.cat = header.split(', ').pop()\n      }\n    }\n\n    ctx.loadCaptureCalled = true\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { dataSize } from '../../../common/util/data-size'\n\n// export default responseSizeFromXhr\n\nexport function responseSizeFromXhr (xhr, lastSize) {\n  var type = xhr.responseType\n  if (type === 'json' && lastSize !== null) return lastSize\n  // Caution! Chrome throws an error if you try to access xhr.responseText for binary data\n  if (type === 'arraybuffer' || type === 'blob' || type === 'json') {\n    return dataSize(xhr.response)\n  } else if (type === 'text' || type === '' || type === undefined) { // empty string type defaults to 'text'\n    return dataSize(xhr.responseText)\n  } else { // e.g. ms-stream and document (we do not currently determine the size of Document objects)\n    return undefined\n  }\n}\n"],"names":["ffVersion","match","navigator","userAgent","stringsToParsedUrls","parseUrl","url","urlEl","document","createElement","location","window","ret","href","port","firstSplit","split","pop","hostname","pathname","protocol","charAt","sameProtocol","sameDomain","domain","sameOrigin","index","prop","id","obj","type","dataSize","data","length","ArrayBuffer","byteLength","Blob","size","FormData","JSON","stringify","e","undefined","DT","constructor","agentIdentifier","this","generateTracePayload","parsedOrigin","shouldGenerateTrace","loader_config","accountId","accountID","toString","agentId","agentID","trustKey","spanId","traceId","timestamp","Date","now","payload","isAllowedOrigin","useTraceContextHeadersForCors","traceContextParentHeader","generateTraceContextParentHeader","traceContextStateHeader","generateTraceContextStateHeader","excludeNewrelicHeader","useNewrelicHeaderForCors","newrelicHeader","generateTraceHeader","appId","btoa","v","d","ty","ac","ap","tr","ti","tk","isDtEnabled","allowed","dtConfig","distributed_tracing","allowed_origins","Array","i","allowedOrigin","dt","enabled","exclude_newrelic_header","cors_use_newrelic_header","cors_use_tracecontext_headers","handlers","handlersLen","origRequest","originals","REQ","origXHR","XMLHttpRequest","Instrument","super","xhrWrappable","disabled","getWrappedFetch","wrappedFetch","wrap","ee","subscribeToEvents","handle","onNewXhr","xhr","ctx","totalCbs","called","cbTime","end","ended","xhrGuids","lastSize","loadCaptureCalled","params","metrics","addEventListener","event","captureXhrData","loaded","onOpenXhrStart","args","method","addUrl","onOpenXhrEnd","setRequestHeader","xpid","added","onSendXhrStart","context","txSize","startTime","listener","evt","aborted","onloadCalled","emit","err","onXhrCbTime","time","onload","onXhrLoadAdded","cb","useCapture","idString","onXhrLoadRemoved","onXhrResolved","endTime","onAddEventListenerEnd","onRemoveEventListenerEnd","onFnStart","methodName","xhrCbStart","onFnEnd","onFetchBeforeStart","opts","URL","clone","key","headers","Headers","addHeaders","push","headersObj","set","onFetchStart","fetchArguments","dtPayload","target","toUpperCase","body","onFetchDone","res","responseSize","status","rxSize","duration","removeEventListener","readyState","parsed","host","responseSizeFromXhr","responseType","response","responseText","header","getResponseHeader","cat","on"],"sourceRoot":""}