{"version":3,"file":"341.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/event-emitter/register-handler.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/js-errors/aggregate/canonical-function-name.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/js-errors/aggregate/format-stack-trace.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/js-errors/aggregate/compute-stack-trace.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/js-errors/aggregate/string-hash-code.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/js-errors/aggregate/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { handleEE, globalEE } from './handle'\n\n// export default defaultRegister\nexport { globalRegister as global }\nexport { defaultRegister as registerHandler }\n\ndefaultRegister.on = registerWithSpecificEmitter\n\nvar handlers = defaultRegister.handlers = {}\nvar globalHandlers = globalRegister.handlers = {}\n\nexport function defaultRegister (type, handler, group, ee) {\n  registerWithSpecificEmitter(ee || handleEE, handlers, type, handler, group)\n}\n\nfunction globalRegister (type, handler, group) {\n  registerWithSpecificEmitter(globalEE, globalHandlers, type, handler, group)\n}\n\nfunction registerWithSpecificEmitter (ee, handlers, type, handler, group) {\n  if (!group) group = 'feature'\n  if (!ee) ee = handleEE\n\n  if (ee.isBuffering(type)) {\n    var groupHandlers = handlers[group] = handlers[group] || {}\n    var list = groupHandlers[type] = groupHandlers[type] || []\n    list.push([ee, handler])\n  } else {\n    ee.on(type, handler)\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar canonicalFunctionNameRe = /([a-z0-9]+)$/i\nexport function canonicalFunctionName (orig) {\n  if (!orig) return\n\n  var match = orig.match(canonicalFunctionNameRe)\n  if (match) return match[1]\n\n  return\n}\n\n// export default canonicalFunctionName\n// module.exports = canonicalFunctionName\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar stripNewlinesRegex = /^\\n+|\\n+$/g\nvar MAX_STACK_TRACE_LENGTH = 65530\n\nexport function formatStackTrace(stackLines) {\n  return truncateStackLines(stackLines).replace(stripNewlinesRegex, '')\n}\n\n// module.exports.truncateSize = truncateSize\n\n// takes array of stack lines and returns string with top 50 and buttom 50 lines\nfunction truncateStackLines(stackLines) {\n  var stackString\n  if (stackLines.length > 100) {\n    var truncatedLines = stackLines.length - 100\n    stackString = stackLines.slice(0, 50).join('\\n')\n    stackString += '\\n< ...truncated ' + truncatedLines + ' lines... >\\n'\n    stackString += stackLines.slice(-50).join('\\n')\n  } else {\n    stackString = stackLines.join('\\n')\n  }\n  return stackString\n}\n\n// truncates stack string to limit what is sent to backend\nexport function truncateSize(stackString) {\n  return (stackString.length > MAX_STACK_TRACE_LENGTH) ? stackString.substr(0, MAX_STACK_TRACE_LENGTH) : stackString\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable no-useless-escape */\n\n// computeStackTrace: cross-browser stack traces in JavaScript\n//\n// Syntax:\n//   s = computeStackTrace(exception) // consider using TraceKit.report instead\n// Returns:\n//   s.name              - exception name\n//   s.message           - exception message\n//   s.stack[i].url      - JavaScript or HTML file URL\n//   s.stack[i].func     - function name, or empty for anonymous functions\n//   s.stack[i].line     - line number, if known\n//   s.stack[i].column   - column number, if known\n//   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n//   s.mode              - 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace\n//\n// Supports:\n//   - Firefox:  full stack trace with line numbers and unreliable column\n//               number on top frame\n//   - Chrome:   full stack trace with line and column numbers\n//   - Safari:   line and column number for the topmost stacktrace element\n//               only\n//   - IE:       no line numbers whatsoever\n\n// Contents of Exception in various browsers.\n//\n// SAFARI:\n// ex.message = Can't find variable: qq\n// ex.line = 59\n// ex.sourceId = 580238192\n// ex.sourceURL = http://...\n// ex.expressionBeginOffset = 96\n// ex.expressionCaretOffset = 98\n// ex.expressionEndOffset = 98\n// ex.name = ReferenceError\n//\n// FIREFOX:\n// ex.message = qq is not defined\n// ex.fileName = http://...\n// ex.lineNumber = 59\n// ex.stack = ...stack trace... (see the example below)\n// ex.name = ReferenceError\n//\n// CHROME:\n// ex.message = qq is not defined\n// ex.name = ReferenceError\n// ex.type = not_defined\n// ex.arguments = ['aa']\n// ex.stack = ...stack trace...\n//\n// INTERNET EXPLORER:\n// ex.message = ...\n// ex.name = ReferenceError\nimport { reduce } from '../../../common/util/reduce'\nimport {formatStackTrace} from './format-stack-trace'\n\nvar debug = false\n\nvar classNameRegex = /function (.+?)\\s*\\(/\nvar chrome = /^\\s*at (?:((?:\\[object object\\])?(?:[^(]*\\([^)]*\\))*[^()]*(?: \\[as \\S+\\])?) )?\\(?((?:file|http|https|chrome-extension):.*?)?:(\\d+)(?::(\\d+))?\\)?\\s*$/i\nvar gecko = /^\\s*(?:(\\S*|global code)(?:\\(.*?\\))?@)?((?:file|http|https|chrome|safari-extension).*?):(\\d+)(?::(\\d+))?\\s*$/i\nvar chrome_eval = /^\\s*at .+ \\(eval at \\S+ \\((?:(?:file|http|https):[^)]+)?\\)(?:, [^:]*:\\d+:\\d+)?\\)$/i\nvar ie_eval = /^\\s*at Function code \\(Function code:\\d+:\\d+\\)\\s*/i\n\n// export default computeStackTrace\n// module.exports = computeStackTrace\n\nexport function computeStackTrace (ex) {\n  var stack = null\n\n  try {\n    stack = computeStackTraceFromStackProp(ex)\n    if (stack) {\n      return stack\n    }\n  } catch (e) {\n    if (debug) {\n      throw e\n    }\n  }\n\n  try {\n    stack = computeStackTraceBySourceAndLine(ex)\n    if (stack) {\n      return stack\n    }\n  } catch (e) {\n    if (debug) {\n      throw e\n    }\n  }\n\n  try {\n    stack = computeStackTraceWithMessageOnly(ex)\n    if (stack) {\n      return stack\n    }\n  } catch (e) {\n    if (debug) {\n      throw e\n    }\n  }\n\n  return {\n    'mode': 'failed',\n    'stackString': '',\n    'frames': []\n  }\n}\n\n/**\n * Computes stack trace information from the stack property.\n * Chrome and Gecko use this property.\n * @param {Error} ex\n * @return {?Object.<string, *>} Stack trace information.\n */\nfunction computeStackTraceFromStackProp (ex) {\n  if (!ex.stack) {\n    return null\n  }\n\n  var errorInfo = reduce(\n    ex.stack.split('\\n'),\n    parseStackProp,\n    {frames: [], stackLines: [], wrapperSeen: false}\n  )\n\n  if (!errorInfo.frames.length) return null\n\n  return {\n    'mode': 'stack',\n    'name': ex.name || getClassName(ex),\n    'message': ex.message,\n    'stackString': formatStackTrace(errorInfo.stackLines),\n    'frames': errorInfo.frames\n  }\n}\n\nfunction parseStackProp (info, line) {\n  var element = getElement(line)\n\n  if (!element) {\n    info.stackLines.push(line)\n    return info\n  }\n\n  if (isWrapper(element.func)) info.wrapperSeen = true\n  else info.stackLines.push(line)\n\n  if (!info.wrapperSeen) info.frames.push(element)\n  return info\n}\n\nfunction getElement (line) {\n  var parts = line.match(gecko)\n  if (!parts) parts = line.match(chrome)\n\n  if (parts) {\n    return ({\n      'url': parts[2],\n      'func': (parts[1] !== 'Anonymous function' && parts[1] !== 'global code' && parts[1]) || null,\n      'line': +parts[3],\n      'column': parts[4] ? +parts[4] : null\n    })\n  }\n\n  if (line.match(chrome_eval) || line.match(ie_eval) || line === 'anonymous') {\n    return { 'func': 'evaluated code' }\n  }\n}\n\nfunction computeStackTraceBySourceAndLine (ex) {\n  if (!('line' in ex)) return null\n\n  var className = ex.name || getClassName(ex)\n\n  // Safari does not provide a URL for errors in eval'd code\n  if (!ex.sourceURL) {\n    return ({\n      'mode': 'sourceline',\n      'name': className,\n      'message': ex.message,\n      'stackString': getClassName(ex) + ': ' + ex.message + '\\n    in evaluated code',\n      'frames': [{\n        'func': 'evaluated code'\n      }]\n    })\n  }\n\n  var stackString = className + ': ' + ex.message + '\\n    at ' + ex.sourceURL\n  if (ex.line) {\n    stackString += ':' + ex.line\n    if (ex.column) {\n      stackString += ':' + ex.column\n    }\n  }\n\n  return ({\n    'mode': 'sourceline',\n    'name': className,\n    'message': ex.message,\n    'stackString': stackString,\n    'frames': [{ 'url': ex.sourceURL,\n      'line': ex.line,\n      'column': ex.column\n    }]\n  })\n}\n\nfunction computeStackTraceWithMessageOnly (ex) {\n  var className = ex.name || getClassName(ex)\n  if (!className) return null\n\n  return ({\n    'mode': 'nameonly',\n    'name': className,\n    'message': ex.message,\n    'stackString': className + ': ' + ex.message,\n    'frames': []\n  })\n}\n\nfunction getClassName (obj) {\n  var results = classNameRegex.exec(String(obj.constructor))\n  return (results && results.length > 1) ? results[1] : 'unknown'\n}\n\nfunction isWrapper (functionName) {\n  return (functionName && functionName.indexOf('nrWrapper') >= 0)\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function stringHashCode (string) {\n  var hash = 0\n  var charVal\n\n  if (!string || !string.length) return hash\n  for (var i = 0; i < string.length; i++) {\n    charVal = string.charCodeAt(i)\n    hash = ((hash << 5) - hash) + charVal\n    hash = hash | 0 // Convert to 32bit integer\n  }\n  return hash\n}\n\n// export default stringHashCode\n// module.exports = stringHashCode\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { canonicalFunctionName } from './canonical-function-name'\nimport { computeStackTrace } from './compute-stack-trace'\nimport { stringHashCode } from './string-hash-code'\nimport { truncateSize } from './format-stack-trace'\n\nimport { registerHandler as register } from '../../../common/event-emitter/register-handler'\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler'\nimport { stringify } from '../../../common/util/stringify'\nimport { handle } from '../../../common/event-emitter/handle'\nimport { mapOwn } from '../../../common/util/map-own'\nimport { getInfo, getConfigurationValue, getRuntime } from '../../../common/config/config'\nimport { now } from '../../../common/timing/now'\nimport { cleanURL } from '../../../common/url/clean-url'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nexport class Aggregate extends FeatureBase {\n  constructor(agentIdentifier, aggregator) {\n    super(agentIdentifier, aggregator)\n    this.stackReported = {}\n    this.pageviewReported = {}\n    this.errorCache = {}\n    this.currentBody\n\n    this.errorOnPage = false\n\n    // this will need to change to match whatever ee we use in the instrument\n    this.ee.on('interactionSaved', function (interaction) {\n      if (!this.errorCache[interaction.id]) return\n\n      this.errorCache[interaction.id].forEach(function (item) {\n        var customParams = {}\n        var globalCustomParams = item[4]\n        var localCustomParams = item[5]\n\n        mapOwn(globalCustomParams, setCustom)\n        mapOwn(interaction.root.attrs.custom, setCustom)\n        mapOwn(localCustomParams, setCustom)\n\n        var params = item[2]\n        params.browserInteractionId = interaction.root.attrs.id\n        delete params._interactionId\n\n        if (params._interactionNodeId) {\n          params.parentNodeId = params._interactionNodeId.toString()\n          delete params._interactionNodeId\n        }\n\n        var hash = item[1] + interaction.root.attrs.id\n        var jsAttributesHash = stringHashCode(stringify(customParams))\n        var aggregateHash = hash + ':' + jsAttributesHash\n\n        this.aggregator.store(item[0], aggregateHash, params, item[3], customParams)\n\n        function setCustom(key, val) {\n          customParams[key] = (val && typeof val === 'object' ? stringify(val) : val)\n        }\n      })\n      delete this.errorCache[interaction.id]\n    })\n\n    // this will need to change to match whatever ee we use in the instrument\n    this.ee.on('interactionDiscarded', function (interaction) {\n      if (!this.errorCache || !this.errorCache[interaction.id]) return\n\n      this.errorCache[interaction.id].forEach(function (item) {\n        var customParams = {}\n        var globalCustomParams = item[4]\n        var localCustomParams = item[5]\n\n        mapOwn(globalCustomParams, setCustom)\n        mapOwn(interaction.root.attrs.custom, setCustom)\n        mapOwn(localCustomParams, setCustom)\n\n        var params = item[2]\n        delete params._interactionId\n        delete params._interactionNodeId\n\n        var hash = item[1]\n        var jsAttributesHash = stringHashCode(stringify(customParams))\n        var aggregateHash = hash + ':' + jsAttributesHash\n\n        this.aggregator.store(item[0], aggregateHash, item[2], item[3], customParams)\n\n        function setCustom(key, val) {\n          customParams[key] = (val && typeof val === 'object' ? stringify(val) : val)\n        }\n      })\n      delete this.errorCache[interaction.id]\n    })\n    register('err', (...args) => this.storeError(...args), undefined, this.ee)\n    register('ierr', (...args) => this.storeError(...args), undefined, this.ee)\n\n    var harvestTimeSeconds = getConfigurationValue(this.agentIdentifier, 'jserrors.harvestTimeSeconds') || 10\n\n    // on('jserrors', this.onHarvestStarted) //harvest.js --> now a class()\n    var scheduler = new HarvestScheduler('jserrors', { onFinished: (...args) => this.onHarvestFinished(...args) }, this)\n    scheduler.harvest.on('jserrors', (...args) => this.onHarvestStarted(...args))\n    scheduler.startTimer(harvestTimeSeconds)\n  }\n\n  onHarvestStarted(options) {\n    var body = this.aggregator.take(['err', 'ierr'])\n\n    if (options.retry) {\n      this.currentBody = body\n    }\n\n    var payload = { body: body, qs: {} }\n    var releaseIds = stringify(getRuntime(this.agentIdentifier).releaseIds)\n\n    if (releaseIds !== '{}') {\n      payload.qs.ri = releaseIds\n    }\n\n    if (body && body.err && body.err.length && !this.errorOnPage) {\n      payload.qs.pve = '1'\n      this.errorOnPage = true\n    }\n    return payload\n  }\n\n  onHarvestFinished(result) {\n    if (result.retry && this.currentBody) {\n      mapOwn(this.currentBody, function (key, value) {\n        for (var i = 0; i < value.length; i++) {\n          var bucket = value[i]\n          var name = this.getBucketName(bucket.params, bucket.custom)\n          this.aggregator.merge(key, name, bucket.metrics, bucket.params, bucket.custom)\n        }\n      })\n      this.currentBody = null\n    }\n  }\n\n  nameHash(params) {\n    return stringHashCode(params.exceptionClass) ^ params.stackHash\n  }\n\n  getBucketName(params, customParams) {\n    return this.nameHash(params) + ':' + stringHashCode(stringify(customParams))\n  }\n\n  canonicalizeURL(url, cleanedOrigin) {\n    if (typeof url !== 'string') return ''\n\n    var cleanedURL = cleanURL(url)\n    if (cleanedURL === cleanedOrigin) {\n      return '<inline>'\n    } else {\n      return cleanedURL\n    }\n  }\n\n  buildCanonicalStackString(stackInfo, cleanedOrigin) {\n    var canonicalStack = ''\n\n    for (var i = 0; i < stackInfo.frames.length; i++) {\n      var frame = stackInfo.frames[i]\n      var func = canonicalFunctionName(frame.func)\n\n      if (canonicalStack) canonicalStack += '\\n'\n      if (func) canonicalStack += func + '@'\n      if (typeof frame.url === 'string') canonicalStack += frame.url\n      if (frame.line) canonicalStack += ':' + frame.line\n    }\n\n    return canonicalStack\n  }\n\n  // Strip query parameters and fragments from the stackString property of the\n  // given stackInfo, along with the 'url' properties of each frame in\n  // stackInfo.frames.\n  //\n  // Any URLs that are equivalent to the cleaned version of the origin will also\n  // be replaced with the string '<inline>'.\n  //\n  canonicalizeStackURLs(stackInfo) {\n    // Currently, loader.origin might contain a fragment, but we don't want to use it\n    // for comparing with frame URLs.\n    var cleanedOrigin = cleanURL(getRuntime(this.agentIdentifier).origin)\n\n    for (var i = 0; i < stackInfo.frames.length; i++) {\n      var frame = stackInfo.frames[i]\n      var originalURL = frame.url\n      var cleanedURL = this.canonicalizeURL(originalURL, cleanedOrigin)\n      if (cleanedURL && cleanedURL !== frame.url) {\n        frame.url = cleanedURL\n        stackInfo.stackString = stackInfo.stackString.split(originalURL).join(cleanedURL)\n      }\n    }\n\n    return stackInfo\n  }\n\n  storeError(err, time, internal, customAttributes) {\n    // are we in an interaction\n    time = time || now()\n    if (!internal && getRuntime(this.agentIdentifier).onerror && getRuntime(this.agentIdentifier).onerror(err)) return\n\n    var stackInfo = this.canonicalizeStackURLs(computeStackTrace(err))\n    var canonicalStack = this.buildCanonicalStackString(stackInfo)\n\n    var params = {\n      stackHash: stringHashCode(canonicalStack),\n      exceptionClass: stackInfo.name,\n      request_uri: window.location.pathname\n    }\n    if (stackInfo.message) {\n      params.message = '' + stackInfo.message\n    }\n\n    if (!this.stackReported[params.stackHash]) {\n      this.stackReported[params.stackHash] = true\n      params.stack_trace = truncateSize(stackInfo.stackString)\n    } else {\n      params.browser_stack_hash = stringHashCode(stackInfo.stackString)\n    }\n    params.releaseIds = stringify(getRuntime(this.agentIdentifier).releaseIds)\n\n    // When debugging stack canonicalization/hashing, uncomment these lines for\n    // more output in the test logs\n    // params.origStack = err.stack\n    // params.canonicalStack = canonicalStack\n\n    var hash = this.nameHash(params)\n\n    if (!this.pageviewReported[hash]) {\n      params.pageview = 1\n      this.pageviewReported[hash] = true\n    }\n\n    var type = internal ? 'ierr' : 'err'\n    var newMetrics = { time: time }\n\n    // stn and spa aggregators listen to this event - stn sends the error in its payload,\n    // and spa annotates the error with interaction info\n    handle('errorAgg', [type, hash, params, newMetrics], undefined, undefined, this.ee)\n\n    if (params._interactionId != null) {\n      // hold on to the error until the interaction finishes\n      this.errorCache[params._interactionId] = this.errorCache[params._interactionId] || []\n      this.errorCache[params._interactionId].push([type, hash, params, newMetrics, att, customAttributes])\n    } else {\n      // store custom attributes\n      var customParams = {}\n      var att = getInfo(this.agentIdentifier).jsAttributes\n      mapOwn(att, setCustom)\n      if (customAttributes) {\n        mapOwn(customAttributes, setCustom)\n      }\n\n      var jsAttributesHash = stringHashCode(stringify(customParams))\n      var aggregateHash = hash + ':' + jsAttributesHash\n      this.aggregator.store(type, aggregateHash, params, newMetrics, customParams)\n    }\n\n    function setCustom(key, val) {\n      customParams[key] = (val && typeof val === 'object' ? stringify(val) : val)\n    }\n  }\n}\n\n"],"names":["defaultRegister","on","registerWithSpecificEmitter","handlers","globalHandlers","globalRegister","type","handler","group","ee","isBuffering","groupHandlers","push","canonicalFunctionNameRe","canonicalFunctionName","orig","match","stripNewlinesRegex","formatStackTrace","stackLines","truncateStackLines","stackString","length","truncatedLines","slice","join","replace","debug","classNameRegex","chrome","gecko","chrome_eval","ie_eval","computeStackTrace","ex","stack","computeStackTraceFromStackProp","errorInfo","reduce","split","parseStackProp","frames","wrapperSeen","name","getClassName","message","e","computeStackTraceBySourceAndLine","className","sourceURL","line","column","computeStackTraceWithMessageOnly","info","element","getElement","parts","isWrapper","functionName","indexOf","func","obj","results","exec","String","constructor","stringHashCode","string","hash","i","charCodeAt","Aggregate","agentIdentifier","aggregator","super","this","stackReported","pageviewReported","errorCache","currentBody","errorOnPage","interaction","id","forEach","item","customParams","globalCustomParams","localCustomParams","setCustom","root","attrs","custom","params","browserInteractionId","_interactionId","_interactionNodeId","parentNodeId","toString","aggregateHash","stringify","key","val","store","args","storeError","undefined","harvestTimeSeconds","scheduler","onFinished","onHarvestFinished","harvest","onHarvestStarted","startTimer","options","body","take","retry","payload","qs","releaseIds","ri","err","pve","result","value","bucket","getBucketName","merge","metrics","nameHash","exceptionClass","stackHash","canonicalizeURL","url","cleanedOrigin","cleanedURL","buildCanonicalStackString","stackInfo","canonicalStack","frame","canonicalizeStackURLs","origin","originalURL","time","internal","customAttributes","now","onerror","request_uri","window","location","pathname","browser_stack_hash","stack_trace","truncateSize","substr","pageview","newMetrics","handle","att","jsAttributes"],"sourceRoot":""}