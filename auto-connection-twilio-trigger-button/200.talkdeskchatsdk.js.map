{"version":3,"file":"200.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/window/supports-performance-observer.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/session-trace/instrument/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport function supportsPerformanceObserver () {\n  return 'PerformanceObserver' in window && typeof window.PerformanceObserver === 'function'\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { handle } from '../../../common/event-emitter/handle'\nimport { wrapHistory, wrapEvents, wrapTimer, wrapRaf } from '../../../common/wrap'\nimport { supportsPerformanceObserver } from '../../../common/window/supports-performance-observer'\nimport { eventListenerOpts } from '../../../common/event-listener/event-listener-opts'\nimport { originals, getRuntime } from '../../../common/config/config'\nimport { now } from '../../../common/timing/now'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nvar learResourceTimings = 'learResourceTimings'\nvar ADD_EVENT_LISTENER = 'addEventListener'\nvar REMOVE_EVENT_LISTENER = 'removeEventListener'\nvar RESOURCE_TIMING_BUFFER_FULL = 'resourcetimingbufferfull'\nvar BST_RESOURCE = 'bstResource'\nvar RESOURCE = 'resource'\nvar START = '-start'\nvar END = '-end'\nvar FN_START = 'fn' + START\nvar FN_END = 'fn' + END\nvar BST_TIMER = 'bstTimer'\nvar PUSH_STATE = 'pushState'\n\nvar origEvent = originals.EV\nexport class Instrument extends FeatureBase {\n  constructor(agentIdentifier) {\n    super(agentIdentifier)\n    getRuntime(this.agentIdentifier).features.stn = true\n\n    this.timerEE = wrapTimer(this.ee)\n    this.rafEE = wrapRaf(this.ee)\n    wrapHistory(this.ee)\n    wrapEvents(this.ee)\n\n    if (!(window.performance &&\n      window.performance.timing &&\n      window.performance.getEntriesByType\n    )) return\n\n    this.ee.on(FN_START, function (args, target) {\n      var evt = args[0]\n      if (evt instanceof origEvent) {\n        this.bstStart = now()\n      }\n    })\n\n    this.ee.on(FN_END, function (args, target) {\n      var evt = args[0]\n      if (evt instanceof origEvent) {\n        handle('bst', [evt, target, this.bstStart, now()])\n      }\n    })\n\n    this.timerEE.on(FN_START, function (args, obj, type) {\n      this.bstStart = now()\n      this.bstType = type\n    })\n\n    this.timerEE.on(FN_END, function (args, target) {\n      handle(BST_TIMER, [target, this.bstStart, now(), this.bstType])\n    })\n\n    this.rafEE.on(FN_START, function () {\n      this.bstStart = now()\n    })\n\n    this.rafEE.on(FN_END, function (args, target) {\n      handle(BST_TIMER, [target, this.bstStart, now(), 'requestAnimationFrame'])\n    })\n\n    this.ee.on(PUSH_STATE + START, function (args) {\n      this.time = now()\n      this.startPath = location.pathname + location.hash\n    })\n    this.ee.on(PUSH_STATE + END, function (args) {\n      handle('bstHist', [location.pathname + location.hash, this.startPath, this.time])\n    })\n\n    if (supportsPerformanceObserver()) {\n      // capture initial resources, in case our observer missed anything\n      handle(BST_RESOURCE, [window.performance.getEntriesByType('resource')])\n\n      this.observeResourceTimings()\n    } else {\n      // collect resource timings once when buffer is full\n      if (ADD_EVENT_LISTENER in window.performance) {\n        if (window.performance['c' + learResourceTimings]) {\n          window.performance[ADD_EVENT_LISTENER](RESOURCE_TIMING_BUFFER_FULL, this.onResourceTimingBufferFull, eventListenerOpts(false))\n        } else {\n          window.performance[ADD_EVENT_LISTENER]('webkit' + RESOURCE_TIMING_BUFFER_FULL, this.onResourceTimingBufferFull, eventListenerOpts(false))\n        }\n      }\n    }\n\n    document[ADD_EVENT_LISTENER]('scroll', this.noOp, eventListenerOpts(false))\n    document[ADD_EVENT_LISTENER]('keypress', this.noOp, eventListenerOpts(false))\n    document[ADD_EVENT_LISTENER]('click', this.noOp, eventListenerOpts(false))\n  }\n\n  observeResourceTimings() {\n    var observer = new PerformanceObserver(function (list, observer) { // eslint-disable-line no-undef\n      var entries = list.getEntries()\n\n      handle(BST_RESOURCE, [entries])\n    })\n\n    try {\n      observer.observe({ entryTypes: ['resource'] })\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  onResourceTimingBufferFull(e) {\n    handle(BST_RESOURCE, [window.performance.getEntriesByType(RESOURCE)])\n\n    // stop recording once buffer is full\n    if (window.performance['c' + learResourceTimings]) {\n      try {\n        window.performance[REMOVE_EVENT_LISTENER](RESOURCE_TIMING_BUFFER_FULL, this.onResourceTimingBufferFull, false)\n      } catch (e) {\n        // do nothing\n      }\n    } else {\n      try {\n        window.performance[REMOVE_EVENT_LISTENER]('webkit' + RESOURCE_TIMING_BUFFER_FULL, this.onResourceTimingBufferFull, false)\n      } catch (e) {\n        // do nothing\n      }\n    }\n  }\n\n  noOp(e) { /* no-op */ }\n}\n"],"names":["supportsPerformanceObserver","window","PerformanceObserver","learResourceTimings","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","RESOURCE_TIMING_BUFFER_FULL","BST_RESOURCE","START","END","FN_START","FN_END","BST_TIMER","PUSH_STATE","origEvent","EV","Instrument","constructor","agentIdentifier","super","this","features","stn","timerEE","ee","rafEE","performance","timing","getEntriesByType","on","args","target","bstStart","evt","obj","type","bstType","time","startPath","location","pathname","hash","observeResourceTimings","onResourceTimingBufferFull","document","noOp","observer","list","entries","getEntries","observe","entryTypes","e"],"sourceRoot":""}