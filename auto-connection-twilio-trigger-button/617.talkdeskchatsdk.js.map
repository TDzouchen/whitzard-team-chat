{"version":3,"file":"617.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/event-emitter/contextual-ee.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/event-emitter/handle.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/event-listener/event-listener-opts.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/util/feature-base.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/util/get-or-set.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/window/visibility.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/page-view-timing/instrument/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { gosNREUM } from '../window/nreum'\nimport { getOrSet } from '../util/get-or-set'\nimport { mapOwn } from '../util/map-own'\n\nvar ctxId = 'nr@context'\n\n// create global emitter instance that can be shared among bundles\nlet nr = gosNREUM()\nvar globalInstance\nif (nr.ee) {\n  globalInstance = nr.ee\n} else {\n  globalInstance = ee(undefined, 'globalEE')\n  nr.ee = globalInstance\n}\n\n// export default ee()\nvar baseEE = ee(undefined, 'baseEE')\n\nexport { baseEE as ee }\n\nexport { globalInstance as global }\n\nfunction EventContext () {}\n\nfunction ee (old, debugId) {\n  var handlers = {}\n  var bufferGroupMap = {}\n  var emitters = {}\n\n  var emitter = {\n    on: addEventListener,\n    addEventListener: addEventListener,\n    removeEventListener: removeEventListener,\n    emit: emit,\n    get: getOrCreate,\n    listeners: listeners,\n    context: context,\n    buffer: bufferEventsByGroup,\n    abort: abortIfNotLoaded,\n    aborted: false,\n    isBuffering: isBuffering,\n    debugId\n  }\n\n  // buffer is associated with a base emitter, since there are two\n  // (global and scoped to the current bundle), it is now part of the emitter\n  if (!old) {\n    emitter.backlog = {}\n  }\n\n  return emitter\n\n  function context (contextOrStore) {\n    if (contextOrStore && contextOrStore instanceof EventContext) {\n      return contextOrStore\n    } else if (contextOrStore) {\n      return getOrSet(contextOrStore, ctxId, getNewContext)\n    } else {\n      return getNewContext()\n    }\n  }\n\n  function emit (type, args, contextOrStore, force, bubble) {\n    if (bubble !== false) bubble = true\n    if (baseEE.aborted && !force) { return }\n    if (old && bubble) old.emit(type, args, contextOrStore)\n    // log(\"continue...\")\n\n    var ctx = context(contextOrStore)\n    var handlersArray = listeners(type)\n    var len = handlersArray.length\n\n    // Extremely verbose debug logging\n    // if ([/^xhr/].map(function (match) {return type.match(match)}).filter(Boolean).length) {\n    //  log(type + ' args:')\n    //  log(args)\n    //  log(type + ' handlers array:')\n    //  log(handlersArray)\n    //  log(type + ' context:')\n    //  log(ctx)\n    //  log(type + ' ctxStore:')\n    //  log(ctxStore)\n    // }\n\n    // Apply each handler function in the order they were added\n    // to the context with the arguments\n\n    for (var i = 0; i < len; i++) handlersArray[i].apply(ctx, args)\n\n    // log(bufferGroupMap[type])\n    // Buffer after emitting for consistent ordering\n    var bufferGroup = getBuffer()[bufferGroupMap[type]]\n    if (bufferGroup) {\n      bufferGroup.push([emitter, type, args, ctx])\n    }\n\n    // log(bufferGroup)\n\n    // Return the context so that the module that emitted can see what was done.\n    return ctx\n  }\n\n  function addEventListener (type, fn) {\n    // Retrieve type from handlers, if it doesn't exist assign the default and retrieve it.\n    handlers[type] = listeners(type).concat(fn)\n  }\n\n  function removeEventListener (type, fn) {\n    var listeners = handlers[type]\n    if (!listeners) return\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === fn) {\n        listeners.splice(i, 1)\n      }\n    }\n  }\n\n  function listeners (type) {\n    return handlers[type] || []\n  }\n\n  function getOrCreate (name) {\n    return (emitters[name] = emitters[name] || ee(emitter, name))\n  }\n\n  function bufferEventsByGroup (types, group) {\n    var eventBuffer = getBuffer()\n\n    // do not buffer events if agent has been aborted\n    if (emitter.aborted) return\n    mapOwn(types, function (i, type) {\n      group = group || 'feature'\n      bufferGroupMap[type] = group\n      if (!(group in eventBuffer)) {\n        eventBuffer[group] = []\n      }\n    })\n  }\n\n  function isBuffering(type) {\n    var bufferGroup = getBuffer()[bufferGroupMap[type]]\n    return !!bufferGroup\n  }\n\n  // buffer is associated with a base emitter, since there are two\n  // (global and scoped to the current bundle), it is now part of the emitter\n  function getBuffer() {\n    if (old) {\n      return old.backlog\n    }\n    return emitter.backlog\n  }\n}\n\n// get context object from store object, or create if does not exist\nexport function getOrSetContext(obj) {\n  return getOrSet(obj, ctxId, getNewContext)\n}\n\nfunction getNewContext () {\n  return new EventContext()\n}\n\n// abort should be called 30 seconds after the page has started running\n// We should drop our data and stop collecting if we still have a backlog, which\n// signifies the rest of the agent wasn't loaded\nfunction abortIfNotLoaded () {\n  if (baseEE.backlog.api || baseEE.backlog.feature) {\n    baseEE.aborted = true\n    baseEE.backlog = {}\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ee as eePkg, global } from './contextual-ee'\nexport var handleEE = eePkg.get('handle')\nexport var globalEE = global.get('handle')\n\n// Exported for register-handler to attach to.\n// export default handle\nexport { globalHandle as global }\n\nexport function handle(type, args, ctx, group, ee) {\n  if (ee) {\n    ee.buffer([type], group)\n    ee.emit(type, args, ctx)\n  } else {\n    handleEE.buffer([type], group)\n    handleEE.emit(type, args, ctx)\n  }\n}\n\nfunction globalHandle(type, args, ctx, group) {\n  globalEE.buffer([type], group)\n  globalEE.emit(type, args, ctx)\n}\n","var supportsPassive = false\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    // eslint-disable-next-line\n    get: function() {\n      supportsPassive = true\n    }\n  })\n  window.addEventListener('testPassive', null, opts)\n  window.removeEventListener('testPassive', null, opts)\n} catch (e) {\n  // do nothing\n}\n\nexport function eventListenerOpts(useCapture) {\n  return supportsPassive ? {passive: true, capture: !!useCapture} : !!useCapture\n}\n\n// export default eventListenerOpts\n","import {ee} from '../event-emitter/contextual-ee'\n\nexport class FeatureBase {\n  constructor(agentIdentifier, aggregator) {\n    this.agentIdentifier = agentIdentifier\n    this.aggregator = aggregator\n    this.ee = ee.get(agentIdentifier)\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar has = Object.prototype.hasOwnProperty\n\n// export default getOrSet\n\n// Always returns the current value of obj[prop], even if it has to set it first\nexport function getOrSet (obj, prop, getVal) {\n  // If the value exists return it.\n  if (has.call(obj, prop)) return obj[prop]\n\n  var val = getVal()\n\n  // Attempt to set the property so it's not enumerable\n  if (Object.defineProperty && Object.keys) {\n    try {\n      Object.defineProperty(obj, prop, {\n        value: val, // old IE inherits non-write-ability\n        writable: true,\n        enumerable: false\n      })\n\n      return val\n    } catch (e) {\n      // Can't report internal errors,\n      // because GOS is a dependency of the reporting mechanisms\n    }\n  }\n\n  // fall back to setting normally\n  obj[prop] = val\n  return val\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {eventListenerOpts} from '../event-listener/event-listener-opts'\n\nvar hidden, eventName, state\n\nif (typeof document.hidden !== 'undefined') {\n  hidden = 'hidden'\n  eventName = 'visibilitychange'\n  state = 'visibilityState'\n} else if (typeof document.msHidden !== 'undefined') {\n  hidden = 'msHidden'\n  eventName = 'msvisibilitychange'\n} else if (typeof document.webkitHidden !== 'undefined') {\n  hidden = 'webkitHidden'\n  eventName = 'webkitvisibilitychange'\n  state = 'webkitVisibilityState'\n}\n\nexport function subscribeToVisibilityChange(cb) {\n  if ('addEventListener' in document && eventName) {\n    document.addEventListener(eventName, handleVisibilityChange, eventListenerOpts(false))\n  }\n\n  function handleVisibilityChange() {\n    if (state && document[state]) {\n      cb(document[state])\n    } else if (document[hidden]) {\n      cb('hidden')\n    } else {\n      cb('visible')\n    }\n  }\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { handle } from '../../../common/event-emitter/handle'\nimport { subscribeToVisibilityChange } from '../../../common/window/visibility'\nimport { eventListenerOpts } from '../../../common/event-listener/event-listener-opts'\nimport { gosNREUM } from '../../../common/window/nreum'\nimport { getOffset, now } from '../../../common/timing/now'\nimport { getConfigurationValue } from '../../../common/config/config'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nexport class Instrument extends FeatureBase {\n  constructor(agentIdentifier) {\n    super(agentIdentifier)\n    this.pageHiddenTime\n    this.performanceObserver\n    this.lcpPerformanceObserver\n    this.clsPerformanceObserver\n    this.fiRecorded = false\n\n    if (this.isEnabled()) {\n      if ('PerformanceObserver' in window && typeof window.PerformanceObserver === 'function') {\n        // passing in an unknown entry type to observer could throw an exception\n        this.performanceObserver = new PerformanceObserver(perfObserver) // eslint-disable-line no-undef\n        try {\n          this.performanceObserver.observe({ entryTypes: ['paint'] })\n        } catch (e) {\n          // do nothing\n        }\n\n        this.lcpPerformanceObserver = new PerformanceObserver(lcpObserver) // eslint-disable-line no-undef\n        try {\n          this.lcpPerformanceObserver.observe({ entryTypes: ['largest-contentful-paint'] })\n        } catch (e) {\n          // do nothing\n        }\n\n        this.clsPerformanceObserver = new PerformanceObserver(clsObserver) // eslint-disable-line no-undef\n        try {\n          this.clsPerformanceObserver.observe({ type: 'layout-shift', buffered: true })\n        } catch (e) {\n          // do nothing\n        }\n      }\n\n      // first interaction and first input delay\n      if ('addEventListener' in document) {\n        this.fiRecorded = false\n        var allowedEventTypes = ['click', 'keydown', 'mousedown', 'pointerdown', 'touchstart']\n        allowedEventTypes.forEach((e) => {\n          document.addEventListener(e, (...args) => this.captureInteraction(...args), eventListenerOpts(false))\n        })\n      }\n      // page visibility events\n      subscribeToVisibilityChange((...args) => this.captureVisibilityChange(...args))\n    }\n  }\n\n  isEnabled() {\n    return getConfigurationValue(this.agentIdentifier, 'page_view_timing.enabled') !== false\n  }\n\n  // paint metrics\n  perfObserver(list, observer) {\n    var entries = list.getEntries()\n    entries.forEach((entry) => {\n      if (entry.name === 'first-paint') {\n        handle('timing', ['fp', Math.floor(entry.startTime)], undefined, undefined, this.ee)\n      } else if (entry.name === 'first-contentful-paint') {\n        handle('timing', ['fcp', Math.floor(entry.startTime)], undefined, undefined, this.ee)\n      }\n    })\n  }\n\n  // largest contentful paint\n  lcpObserver(list, observer) {\n    var entries = list.getEntries()\n    if (entries.length > 0) {\n      var entry = entries[entries.length - 1]\n\n      if (this.pageHiddenTime && this.pageHiddenTime < entry.startTime) return\n\n      var payload = [entry]\n\n      var attributes = this.addConnectionAttributes({})\n      if (attributes) payload.push(attributes)\n\n      handle('lcp', payload, undefined, undefined, this.ee)\n    }\n  }\n\n  clsObserver(list) {\n    list.getEntries().forEach(function (entry) {\n      if (!entry.hadRecentInput) {\n        handle('cls', [entry], undefined, undefined, this.ee)\n      }\n    })\n  }\n\n  // takes an attributes object and appends connection attributes if available\n  addConnectionAttributes(attributes) {\n    var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n    if (!connection) return\n\n    if (connection.type) attributes['net-type'] = connection.type\n    if (connection.effectiveType) attributes['net-etype'] = connection.effectiveType\n    if (connection.rtt) attributes['net-rtt'] = connection.rtt\n    if (connection.downlink) attributes['net-dlink'] = connection.downlink\n\n    return attributes\n  }\n\n  captureInteraction(evt) {\n    // if (evt instanceof origEvent && !fiRecorded) {\n    if (evt instanceof gosNREUM().o.EV && !this.fiRecorded) {\n      var fi = Math.round(evt.timeStamp)\n      var attributes = {\n        type: evt.type\n      }\n\n      this.addConnectionAttributes(attributes)\n\n      // The value of Event.timeStamp is epoch time in some old browser, and relative\n      // timestamp in newer browsers. We assume that large numbers represent epoch time.\n      if (fi <= now()) {\n        attributes['fid'] = now() - fi\n      } else if (fi > getOffset() && fi <= Date.now()) {\n        fi = fi - getOffset()\n        attributes['fid'] = now() - fi\n      } else {\n        fi = now()\n      }\n\n      this.fiRecorded = true\n      handle('timing', ['fi', fi, attributes], undefined, undefined, this.ee)\n    }\n  }\n\n  captureVisibilityChange(state) {\n    if (state === 'hidden') {\n      this.pageHiddenTime = now()\n      handle('pageHide', [this.pageHiddenTime], undefined, undefined, this.ee)\n    }\n  }\n}\n"],"names":["ctxId","nr","globalInstance","ee","undefined","baseEE","EventContext","old","debugId","handlers","bufferGroupMap","emitters","emitter","on","addEventListener","removeEventListener","type","fn","listeners","i","length","splice","emit","args","contextOrStore","force","bubble","aborted","ctx","context","handlersArray","len","apply","bufferGroup","getBuffer","push","get","getOrCreate","name","buffer","bufferEventsByGroup","types","group","eventBuffer","abort","abortIfNotLoaded","isBuffering","backlog","getNewContext","concat","api","feature","handleEE","globalEE","handle","supportsPassive","opts","Object","defineProperty","window","e","eventListenerOpts","useCapture","passive","capture","FeatureBase","constructor","agentIdentifier","aggregator","this","has","prototype","hasOwnProperty","getOrSet","obj","prop","getVal","call","val","keys","value","writable","enumerable","eventName","state","document","hidden","msHidden","webkitHidden","Instrument","super","pageHiddenTime","performanceObserver","lcpPerformanceObserver","clsPerformanceObserver","fiRecorded","isEnabled","PerformanceObserver","perfObserver","observe","entryTypes","lcpObserver","clsObserver","buffered","forEach","captureInteraction","subscribeToVisibilityChange","cb","handleVisibilityChange","captureVisibilityChange","list","observer","getEntries","entry","Math","floor","startTime","entries","payload","attributes","addConnectionAttributes","hadRecentInput","connection","navigator","mozConnection","webkitConnection","effectiveType","rtt","downlink","evt","o","EV","fi","round","timeStamp","now","Date"],"sourceRoot":""}