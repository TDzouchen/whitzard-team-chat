{"version":3,"file":"340.talkdeskchatsdk.js","mappings":"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","sources":["webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/timing/nav-timing.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/common/metrics/paint-metrics.js","webpack://TalkdeskChatSDK/./node_modules/@newrelic/browser-agent-core/features/page-view-event/aggregate/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// We don't use JSON.stringify directly on the performance timing data for these reasons:\n// * Chrome has extra data in the performance object that we don't want to send all the time (wasteful)\n// * Firefox fails to stringify the native object due to - http://code.google.com/p/v8/issues/detail?id=1223\n// * The variable names are long and wasteful to transmit\n\n// Add Performance Timing values to the given object.\n// * Values are written relative to an offset to reduce their length (i.e. number of characters).\n// * The offset is sent with the data\n// * 0's are not included unless the value is a 'relative zero'\n//\n\nvar START = 'Start'\nvar END = 'End'\nvar UNLOAD_EVENT = 'unloadEvent'\nvar REDIRECT = 'redirect'\nvar DOMAIN_LOOKUP = 'domainLookup'\nvar ONNECT = 'onnect'\nvar REQUEST = 'request'\nvar RESPONSE = 'response'\nvar LOAD_EVENT = 'loadEvent'\nvar DOM_CONTENT_LOAD_EVENT = 'domContentLoadedEvent'\n\nvar navTimingValues = []\n// module.exports = {\n//   addPT: addPT,\n//   addPN: addPN,\n//   nt: navTimingValues\n// }\n\nexport function addPT (pt, v) {\n  var offset = pt['navigation' + START]\n  v.of = offset\n  addRel(offset, offset, v, 'n')\n  addRel(pt[UNLOAD_EVENT + START], offset, v, 'u')\n  addRel(pt[REDIRECT + START], offset, v, 'r')\n  addRel(pt[UNLOAD_EVENT + END], offset, v, 'ue')\n  addRel(pt[REDIRECT + END], offset, v, 're')\n  addRel(pt['fetch' + START], offset, v, 'f')\n  addRel(pt[DOMAIN_LOOKUP + START], offset, v, 'dn')\n  addRel(pt[DOMAIN_LOOKUP + END], offset, v, 'dne')\n  addRel(pt['c' + ONNECT + START], offset, v, 'c')\n  addRel(pt['secureC' + ONNECT + 'ion' + START], offset, v, 's')\n  addRel(pt['c' + ONNECT + END], offset, v, 'ce')\n  addRel(pt[REQUEST + START], offset, v, 'rq')\n  addRel(pt[RESPONSE + START], offset, v, 'rp')\n  addRel(pt[RESPONSE + END], offset, v, 'rpe')\n  addRel(pt.domLoading, offset, v, 'dl')\n  addRel(pt.domInteractive, offset, v, 'di')\n  addRel(pt[DOM_CONTENT_LOAD_EVENT + START], offset, v, 'ds')\n  addRel(pt[DOM_CONTENT_LOAD_EVENT + END], offset, v, 'de')\n  addRel(pt.domComplete, offset, v, 'dc')\n  addRel(pt[LOAD_EVENT + START], offset, v, 'l')\n  addRel(pt[LOAD_EVENT + END], offset, v, 'le')\n  return v\n}\n\n// Add Performance Navigation values to the given object\nexport function addPN (pn, v) {\n  addRel(pn.type, 0, v, 'ty')\n  addRel(pn.redirectCount, 0, v, 'rc')\n  return v\n}\n\nexport function addRel (value, offset, obj, prop) {\n  var relativeValue\n  if (typeof (value) === 'number' && (value > 0)) {\n    relativeValue = Math.round(value - offset)\n    obj[prop] = relativeValue\n  }\n  navTimingValues.push(relativeValue)\n}\n","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport var paintMetrics = {}\n\n// module.exports = {\n//   addMetric: addMetric,\n//   metrics: paintMetrics\n// }\n\nexport function addMetric (name, value) {\n  paintMetrics[name] = value\n}\n","import { measure } from '../../../common/timing/stopwatch'\nimport { mapOwn } from '../../../common/util/map-own'\nimport { param, fromArray } from '../../../common/url/encode'\nimport { addPT, addPN } from '../../../common/timing/nav-timing'\nimport { stringify } from '../../../common/util/stringify'\nimport { addMetric as addPaintMetric } from '../../../common/metrics/paint-metrics'\nimport { submitData } from '../../../common/util/submit-data'\nimport { getConfigurationValue, getInfo, getRuntime } from '../../../common/config/config'\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler'\nimport { FeatureBase } from '../../../common/util/feature-base'\n\nconst jsonp = 'NREUM.setToken'\n\nexport class Aggregate extends FeatureBase {\n  constructor(agentIdentifier, aggregator) {\n    super(agentIdentifier, aggregator)\n    this.getScheme = () => getConfigurationValue(this.agentIdentifier, 'ssl') === false ? 'http' : 'https'\n\n    const info = getInfo(this.agentIdentifier)\n    if (!info.beacon) return\n    if (info.queueTime) this.aggregator.store('measures', 'qt', { value: info.queueTime })\n    if (info.applicationTime) this.aggregator.store('measures', 'ap', { value: info.applicationTime })\n\n    // some time in the past some code will have called stopwatch.mark('starttime', Date.now())\n    // calling measure like this will create a metric that measures the time differential between\n    // the two marks.\n    measure(this.aggregator, 'be', 'starttime', 'firstbyte')\n    measure(this.aggregator, 'fe', 'firstbyte', 'onload')\n    measure(this.aggregator, 'dc', 'firstbyte', 'domContent')\n\n    var measuresMetrics = this.aggregator.get('measures')\n\n    var measuresQueryString = mapOwn(measuresMetrics, function (metricName, measure) {\n      return '&' + metricName + '=' + measure.params.value\n    }).join('')\n\n    // if (measuresQueryString) {\n    // currently we only have one version of our protocol\n    // in the future we may add more\n    var protocol = '1'\n\n    var scheduler = new HarvestScheduler('page-view-event', {}, this)\n\n    var chunksForQueryString = [scheduler.harvest.baseQueryString()]\n\n    chunksForQueryString.push(measuresQueryString)\n\n    chunksForQueryString.push(param('tt', info.ttGuid))\n    chunksForQueryString.push(param('us', info.user))\n    chunksForQueryString.push(param('ac', info.account))\n    chunksForQueryString.push(param('pr', info.product))\n    chunksForQueryString.push(param('af', mapOwn(getRuntime(this.agentIdentifier).features, function (k) { return k }).join(',')))\n\n    if (window.performance && typeof (window.performance.timing) !== 'undefined') {\n      var navTimingApiData = ({\n        timing: addPT(window.performance.timing, {}),\n        navigation: addPN(window.performance.navigation, {})\n      })\n      chunksForQueryString.push(param('perf', stringify(navTimingApiData)))\n    }\n\n    if (window.performance && window.performance.getEntriesByType) {\n      var entries = window.performance.getEntriesByType('paint')\n      if (entries && entries.length > 0) {\n        entries.forEach(function(entry) {\n          if (!entry.startTime || entry.startTime <= 0) return\n\n          if (entry.name === 'first-paint') {\n            chunksForQueryString.push(param('fp',\n              String(Math.floor(entry.startTime))))\n          } else if (entry.name === 'first-contentful-paint') {\n            chunksForQueryString.push(param('fcp',\n              String(Math.floor(entry.startTime))))\n          }\n          addPaintMetric(entry.name, Math.floor(entry.startTime))\n        })\n      }\n    }\n\n    chunksForQueryString.push(param('xx', info.extra))\n    chunksForQueryString.push(param('ua', info.userAttributes))\n    chunksForQueryString.push(param('at', info.atts))\n\n    var customJsAttributes = stringify(info.jsAttributes)\n    chunksForQueryString.push(param('ja', customJsAttributes === '{}' ? null : customJsAttributes))\n\n    var queryString = fromArray(chunksForQueryString, getRuntime(this.agentIdentifier).maxBytes)\n\n    submitData.jsonp(\n      this.getScheme() + '://' + info.beacon + '/' + protocol + '/' + info.licenseKey + queryString,\n      jsonp\n    )\n  }\n}\n"],"names":["START","END","UNLOAD_EVENT","REDIRECT","DOMAIN_LOOKUP","ONNECT","RESPONSE","LOAD_EVENT","DOM_CONTENT_LOAD_EVENT","navTimingValues","addPN","pn","v","addRel","type","redirectCount","value","offset","obj","prop","relativeValue","Math","round","push","paintMetrics","Aggregate","constructor","agentIdentifier","aggregator","super","this","getScheme","info","beacon","queueTime","store","applicationTime","pt","measuresMetrics","get","measuresQueryString","metricName","measure","params","join","chunksForQueryString","harvest","baseQueryString","ttGuid","user","account","product","features","k","window","performance","navTimingApiData","timing","of","domLoading","domInteractive","domComplete","navigation","stringify","getEntriesByType","entries","length","forEach","entry","startTime","name","String","floor","addMetric","extra","userAttributes","atts","customJsAttributes","jsAttributes","queryString","maxBytes","jsonp","licenseKey"],"sourceRoot":""}