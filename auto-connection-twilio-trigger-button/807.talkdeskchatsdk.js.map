{"version":3,"file":"807.talkdeskchatsdk.js","mappings":"4QAYA,ECgB+BA,EAAAA,WAAiB,SAACC,EAAcC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,EAAAA,EAAAA,GAAA,K,WACrE,IAAQC,EAAsDX,EAAtDW,MAAOC,EAA+CZ,EAA/CY,SAAUC,EAAqCb,EAArCa,OAAQC,EAA6Bd,EAA7Bc,MAAOC,EAAsBf,EAAtBe,QAASC,EAAahB,EAAbgB,SAE/BC,GACdC,EAAAA,EAAAA,YAAWC,EAAAA,GADbC,aAAgBH,MAGlB,OACElB,EAAAA,cAAA,OAAKsB,UAAWC,EAAAA,EAAOC,aACrBxB,EAAAA,cAAA,OAAKsB,UAAWG,EAAAA,EAAaC,cAC7B1B,EAAAA,cAAA,OAAKsB,UAAWC,EAAAA,EAAOI,SACrB3B,EAAAA,cAAA,OAAKsB,UAAWC,EAAAA,EAAOK,cACrB5B,EAAAA,cAAA,KACEsB,UAAWC,EAAAA,EAAOX,MAClBiB,MAAO,CACLC,SAAUZ,SAAoB,QAAff,EAALe,EAAOa,qBAAa,IAAA5B,OAAA,EAApBA,EAAsB6B,yBAChCC,WAAYf,SAAoB,QAAfd,EAALc,EAAOa,qBAAa,IAAA3B,OAAA,EAApBA,EAAsB8B,2BAClCC,MAAOjB,SAAoB,QAAfb,EAALa,EAAOa,qBAAa,IAAA1B,OAAA,EAApBA,EAAsB+B,uBAC7B,eAEDxB,EACAK,EAAWjB,EAAAA,cAAA,QAAMsB,UAAWG,EAAAA,EAAaY,WAAW,kBAAC,KAAW,OAIrErC,EAAAA,cAAA,SACEE,IAAKA,EACLa,MAAOA,GAAS,GAChBuB,aAAa,MACbhB,WAAWiB,EAAAA,EAAAA,GAAKhB,EAAAA,EAAOiB,OAAKC,EAAAA,EAAAA,GAAA,GACzBhB,EAAAA,EAAaT,QAAUA,IAE1B0B,GAAG,QACH7B,SAAUA,EACVC,OAAQA,EACRY,YAAaiB,EAAAA,GAAAA,EAAU,yBAA0B,CAC/CC,MAAM1B,SAAoB,QAAfZ,EAALY,EAAOa,qBAAa,IAAAzB,OAAA,EAApBA,EAAsBuC,8BAA+B,OAC3DjC,OAAOkC,EAAAA,EAAAA,IAAYlC,GACnBmC,cAAe,CAAEC,aAAa,KAEhC,UAAQ,oBACRnB,MAAO,CACLC,SAAUZ,SAAoB,QAAfX,EAALW,EAAOa,qBAAa,IAAAxB,OAAA,EAApBA,EAAsB0C,yBAChChB,WAAYf,SAAoB,QAAfV,EAALU,EAAOa,qBAAa,IAAAvB,OAAA,EAApBA,EAAsB0C,2BAClCf,MAAOjB,SAAoB,QAAfT,EAALS,EAAOa,qBAAa,IAAAtB,OAAA,EAApBA,EAAsB0C,sBAC7BC,gBAAiBlC,SAAoB,QAAfR,EAALQ,EAAOa,qBAAa,IAAArB,OAAA,EAApBA,EAAsB2C,oCAI7CrD,EAAAA,cAAA,OAAKsB,UAAWG,EAAAA,EAAaC,cAGnC,EAAC4B,UAAA,G","sources":["webpack://TalkdeskChatSDK/./packages/channel-components/components/InitialScreen/components/CustomField/index.ts","webpack://TalkdeskChatSDK/./packages/channel-components/components/InitialScreen/components/CustomField/CustomField.tsx"],"sourcesContent":["/*\n * Talkdesk Confidential\n *\n * Copyright (C) Talkdesk Inc. 2022\n *\n * The source code for this program is not published or otherwise divested\n * of its trade secrets, irrespective of what has been deposited with the\n * U.S. Copyright Office. Unauthorized copying of this file, via any medium\n * is strictly prohibited.\n */\nimport { CustomField } from './CustomField';\n\nexport default CustomField;\n","/*\n * Talkdesk Confidential\n *\n * Copyright (C) Talkdesk Inc. 2022\n *\n * The source code for this program is not published or otherwise divested\n * of its trade secrets, irrespective of what has been deposited with the\n * U.S. Copyright Office. Unauthorized copying of this file, via any medium\n * is strictly prohibited.\n */\nimport React, { useContext } from 'react';\nimport { WebchatContext } from '@botonic/react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport i18next from 'i18next';\nimport styles from './CustomField.module.css';\nimport commonStyles from '../../styles/common.module.css';\nimport { toLowerCase } from '../../utils/helper';\n\ninterface Props {\n  label: string;\n  onChange: () => void;\n  onBlur: () => void;\n  value: string;\n  isError: boolean;\n  required: boolean;\n}\n\nexport const CustomField: FC = React.forwardRef((props: Props, ref) => {\n  const { label, onChange, onBlur, value, isError, required } = props;\n  const {\n    webchatState: { theme },\n  } = useContext(WebchatContext);\n\n  return (\n    <div className={styles.customField}>\n      <div className={commonStyles.placeholder} />\n      <div className={styles.wrapper}>\n        <div className={styles.labelWrapper}>\n          <p\n            className={styles.label}\n            style={{\n              fontSize: theme?.initialScreen?.customFieldLabelFontSize,\n              fontFamily: theme?.initialScreen?.customFieldLabelFontFamily,\n              color: theme?.initialScreen?.customFieldLabelColor,\n            }}\n          >\n            {label}\n            {required ? <span className={commonStyles.isRequired}>*</span> : null}\n          </p>\n        </div>\n\n        <input\n          ref={ref}\n          value={value || ''}\n          autoComplete=\"off\"\n          className={clsx(styles.input, {\n            [commonStyles.isError]: isError,\n          })}\n          id=\"input\"\n          onChange={onChange}\n          onBlur={onBlur}\n          placeholder={i18next.t('customFieldPlaceholder', {\n            type: theme?.initialScreen?.customFieldInputPlaceholder || 'Type',\n            label: toLowerCase(label),\n            interpolation: { escapeValue: false },\n          })}\n          data-qa=\"test-custom-field\"\n          style={{\n            fontSize: theme?.initialScreen?.customFieldInputFontSize,\n            fontFamily: theme?.initialScreen?.customFieldInputFontFamily,\n            color: theme?.initialScreen?.customFieldInputColor,\n            backgroundColor: theme?.initialScreen?.customFieldInputBackgroundColor,\n          }}\n        />\n      </div>\n      <div className={commonStyles.placeholder} />\n    </div>\n  );\n});\n"],"names":["React","props","ref","_theme$initialScreen","_theme$initialScreen2","_theme$initialScreen3","_theme$initialScreen4","_theme$initialScreen5","_theme$initialScreen6","_theme$initialScreen7","_theme$initialScreen8","_newArrowCheck","label","onChange","onBlur","value","isError","required","theme","useContext","WebchatContext","webchatState","className","styles","customField","commonStyles","placeholder","wrapper","labelWrapper","style","fontSize","initialScreen","customFieldLabelFontSize","fontFamily","customFieldLabelFontFamily","color","customFieldLabelColor","isRequired","autoComplete","clsx","input","_defineProperty","id","i18next","type","customFieldInputPlaceholder","toLowerCase","interpolation","escapeValue","customFieldInputFontSize","customFieldInputFontFamily","customFieldInputColor","backgroundColor","customFieldInputBackgroundColor","bind"],"sourceRoot":""}